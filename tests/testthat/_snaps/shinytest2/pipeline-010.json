{
  "input": {
    "add_to_list_button": 2,
    "begin_button": 1,
    "bul_x3p_name": "Bullet 2",
    "doprocess": 1,
    "prevreport": "Comparison Report"
  },
  "output": {
    "CCBull1": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "CCBull2": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "CCBullLand": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "CC_Sel_1": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 636,
        "objects": {
          "645": {
            "id": 645,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "643": {
            "id": 643,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                498.4640197753906
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "644": {
            "id": 644,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "642": {
            "id": 642,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "636": {
            "id": 636,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 636,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                5007.466796875
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -5049.04931640625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1.411164522171021,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703966140747,
                  -18051.33984375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -415.2988891601562,
                498.4640197753906
              ],
              "windowRect": [
                1260,
                784,
                1405,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              642,
              645,
              643,
              644
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 279,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 1116,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 7812
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 10692
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10696
            }
          ],
          "buffers": [
            {
              "byteLength": 10699,
              "bytes": "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\nqSkJPgsvo77dNnA/NhI2Prvpp77zhG0/+tRwPpmiqb6m6mk/WxOAPgCHoL5zgWo/HbCEPvj9\nmL5/H2s/WxyDPuwsmr6lJms/4RF+PsqTn74hz2o/F8J/Pt+Epr5afGk/iYp+PhVGqr4f5Gg/\nwTg3PpV+pb5b420/oZpVPmhJrb7+5Wo/dPtyPg4aub5G02Y/w/J2Ptaywb4symQ/u0SCPkEu\nyL7acGI/Anp8Pk6Myb5GtWI/AHKCPihsy74gsWE/brGFPspj1b4D5l4/QhN5Ptnm3L7uZF4/\ndp5WPrJ0175V8mE/PvJkPomT2b4tjmA/64t3Pntb3b4/Y14/wGB/Pl/u4b6CrVw/jeGDPiuF\n5r4Q3lo/6odyPtHN6r5vQ1s/6SuFPmxd7L5FG1k/hZ+LPhmg7770MFc/w0BxPgG387506Fg/\nRn5QPkoq/r7PB1g/Q/lgPlhB/b5OQ1c/PlJ3PqDW/b5cjVU/MGl9PsG9/741iVQ/sCKBPgGE\n/r7DiVQ/t7FqPtbu/L5TtVY/zQSCPl3d9b6T71Y/jhaRPrqz8r4Ia1U//D6EPsmj9r6WX1Y/\nJihFPolnG79xX0U/fUBUPs0uHL8DxkM/jtRmPlO5Hb8INUE/R3BoPsxdH7+0uz8/LK9pPrLk\nIL+/Wz4/qB1QPiSpIr/itT4/j9pbPpOIIb9q2D4/OyyEPjbnH7+vrTw/MNGGPovJIL+WdDs/\nv1dGPtBAMb+27TE/dNNLPqsYMb+AsjE/QQBUPmOQML8QoTE/jERaPrgkML+HkjE/yxJgPjn6\nL7/lSDE/V5ZQPrC2Mb+ruzA/gq1RPh8fNL9PMi4/DZFoPipUM78YMi0/ZvttPmb6Mb9rIC4/\n5idVPvQvJr+ZSjs/3zdWPq3aJb/Dgjs/SYJdPp5eJb/JaDs/pWxmPsY3Jb/a3jo/IaBsPpow\nJb8PaTo/q95qPusTJr9Swjk/sNxtPnBhJ7+qWDg/r7huPkZ6KL9GRjc/rxtnPoMwKb+HOjc/\nXpFAPjPjK7+NgDc/LqlSPjfnK7+fPTY/Y+JfPrNiLb/O1TM/ODJcPmiuLr/+3DI/EBJiPt4l\nLr/f7DI/W2BnPmgBLr/EozI/x6tkPnBBLb91lTM/gjFrPnOTK7+qqjQ/Ez91PvjKKr/AkjQ/\nuNNIPklf7b7hMl0/SX9zPiEp5L6E8Vw/NhOGPsSSy74bIGE/1eJ7PqMtr744KWg/g8aBPiIc\nlL7WTmw/vviDPsWzbL65KnA/keO3Pf+fIr4gtHs/PmwDPlC2tr5u4Gw/h72rPipkbb6YwGk/\nBlY6PhLT1L7AIGQ/U1k2ProIu74g6Gk/hL47PkGkd74t7XM/cCBDPmXV9L1XcHk/Bu08Pvqb\ndLyBk3s/+Js3PiWPtT2U03o/2uqNu5enFz6sLH0/pRvevjVwsz2KkGU/AAAAAAAAAAAAAAAA\n3mwSPqE/H792EUU/cBO0PXf2EL8+zFE/adXKPb4U5L4JymM/FzAFPrzgsb7Bu20/aYb+PaRY\nf7713HU/WzsCPqmfHL5Q4no/WGcmvlj8wL7IcGk/6kxWvlYwB79JsFI/WYASPpHcZb9tJtU+\n////////////////0mgA////////////////////////////////////////////0mgA/9Jo\nAP//////////////////////0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/AAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAECcQwDtFEVpT87DVkWpQ6scFEWw0c3DANjWQwB8EkUSpszDAGDqQwB8EkXmdczD\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDqQgCaDUV9qeDCAFBDQwCaDUV5IwLDqzqPQ6s6\nD0X+g27DAMivQwALEEVlDJLDANjWQwALEEUg/pbDVmX3Q6s6D0XptI7DAHwSRACaDUUjY6DD\nAEAcRACaDUUlhMnDAGDqQgApC0VlgdHCAFBDQwApC0X8XPDCALiIQwApC0XORA3DAMivQwAp\nC0WEPD/DANjWQwApC0UrYmPDAOj9QwApC0XWwIrDAHwSRAApC0VsFrTDAEAcRAApC0WmuMTD\nAGDqQgBHBkWsGkTDAFBDQwBHBkUS703DALiIQwBHBkVEw1vDAMivQwBHBkUJJ4PDANjWQwBH\nBkW6q5HDAOj9QwBHBkVqtaXDAHwSRABHBkU2uLjDAEAcRABHBkVYmrXDAGDqQgBlAUVyxXfD\nAFBDQwBlAUXUAX/DALiIQwBlAUX81ILDAMivQwBlAUU9j4bDANjWQwBlAUXU/orDAOj9QwBl\n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\nAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "CC_Sel_2": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 586,
        "objects": {
          "595": {
            "id": 595,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "593": {
            "id": 593,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                248.5069885253906
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "594": {
            "id": 594,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "592": {
            "id": 592,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "586": {
            "id": 586,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 586,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4866.3134765625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4775.14501953125
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  0.9932954907417297,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.86370325088501,
                  -17542.49609375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -430.8441467285156,
                248.5069885253906
              ],
              "windowRect": [
                1160,
                784,
                1305,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              592,
              595,
              593,
              594
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 279,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 1116,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 7812
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 10692
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10696
            }
          ],
          "buffers": [
            {
              "byteLength": 10699,
              "bytes": "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\n3r6gi2U/71qtPe85yb5wZmo/JJkRPYDOqL64g3E/BvTevaqwgb7/E3Y/OPiwvk4EMr4rEGw/\nPU9mPI9uI7+kAkU/iT/fPKnbIb8dN0Y/oEPpPJ9KHr9XEEk/82SIPJUKF795pk4/pEbRPBc3\nDb+PbVU/XOTxPDweBr+77Fk/teULOmgJBL+EUls/jS3mvaC3D7+n41E/3Ub6veMzH78HBUY/\n0poKvIYwAL8WlV0/lpdbPJB7Ar9IOVw/NRlmPLo6Br8o9Vk/oKWAvF3pBL+jwVo/FRbIurAl\nBL9nQVs/9V+DPOvkCr+DAVc/2PyGO2AdE78ngVE/hOQyPLX3F7/H/k0/AAAAAAAAAAAAAAAA\n/////9JoAP//////////////////////////////////////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP//////////////////////0mgA/9JoAP/SaAD/0mgA/9JoAP//////////////////////\n0mgA/9JoAP/SaAD/0mgA/9JoAP//////////////////////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////VjUCQ6scFEWjh7nDq0o2Q6sc\nFEU2rLLDALiIQwB8EkWnX5nDAMivQwB8EkX67I7DANjWQwB8EkVWjYzDAGDqQwB8EkXp7ovD\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDqQgALEEV55rfDAFBDQwALEEVGHLDDALiIQwAL\nEEUwSaXDAMivQwALEEWrk5bDANjWQwALEEUt0o3DVmX3Q6s6D0XHUZTDALgIRACaDUUz0aDD\nAAAAAAAAAAAAAAAAAGDqQgApC0WHUarDAFBDQwApC0X3zqXDALiIQwApC0WIiaHDAMivQwAp\nC0UWbZbDANjWQwApC0XjS43DAOj9QwApC0XgnJDDALgIRAApC0VEDpTDAAAAAAAAAAAAAAAA\nAGDqQgBHBkVkooLDAFBDQwBHBkXqRH3DALiIQwBHBkXf2HbDAMivQwBHBkU9THDDANjWQwBH\nBkXCkWrDAOj9QwBHBkWrrmbDqzoPRKt2BUU4SnvDAEAcRADWA0X8yZPDAGDqQgBlAUWs0TjD\nAFBDQwBlAUVo+DHDALiIQwBlAUU0ACzDAMivQwBlAUWDSybDANjWQwBlAUU9lh/DAOj9QwBl\n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\nAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "CC_Sel_3": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 596,
        "objects": {
          "605": {
            "id": 605,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                29
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "603": {
            "id": 603,
            "type": "light",
            "vertices": [
              [
                -2109.375,
                1171.875,
                243.2497100830078
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "604": {
            "id": 604,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "602": {
            "id": 602,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "596": {
            "id": 596,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 596,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4578.64599609375
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1171.875
                ],
                [
                  0,
                  0,
                  1,
                  -4489.66650390625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1.061798572540283,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703727722168,
                  -16505.490234375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2265.625,
                -421.2088317871094,
                243.2497100830078
              ],
              "windowRect": [
                1180,
                784,
                1335,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              602,
              605,
              603,
              604
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 156,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 261,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 261,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 261,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 224,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3132,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3132,
              "byteOffset": 3132
            },
            {
              "buffer": 0,
              "byteLength": 1044,
              "byteOffset": 6264
            },
            {
              "buffer": 0,
              "byteLength": 2688,
              "byteOffset": 7308
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9996
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10000
            }
          ],
          "buffers": [
            {
              "byteLength": 10003,
              "bytes": "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\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/////////////////\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA////////////////////\n////////////////////////AGDqQgC4CEWQ52DDVlVQQ6tYCkXg5IfDALiIQwApC0UlEZHD\n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\nHEMkOc7DAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "CC_Sel_4": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 646,
        "objects": {
          "655": {
            "id": 655,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "653": {
            "id": 653,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                247.5170745849609
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "654": {
            "id": 654,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "652": {
            "id": 652,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "646": {
            "id": 646,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 646,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4869.47265625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4774.294921875
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1.589272737503052,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703012466431,
                  -17553.884765625
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -437.8728637695312,
                247.5170745849609
              ],
              "windowRect": [
                1280,
                784,
                1425,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              652,
              655,
              653,
              654
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 279,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 1116,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 7812
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 10692
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10696
            }
          ],
          "buffers": [
            {
              "byteLength": 10699,
              "bytes": "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\nZb4p6nc/fmD3PY5MOL7y6Xk/BVkcPgKSyr1muns/z9c0PuDfRb0orHs/WVpUPl/bJL0OOXo/\nsVAOPhyhRb8OyR4/1onnPZWISL/KeRw/mqGXPVEISr9hExw/BXi1PXM6Sr+hUhs/jpljPUc6\nRr8PXiE/gePTPBeaO7/wDy4/tFl0PdVJF7+w8k0/XS1YPh6R0b4cPGM/QZ+APs2o776k41g/\nHYsFPglBO7/7Vis/S/LaPRV6O781KSw/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmCHZPq5DCb4jSWU/\n0mgA/////////////////9JoAP/SaAD/0mgA////////////0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA////////////0mgA////////////0mgA/9JoAP///////////9JoAP//////\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9Jo\nAP/SaAD/0mgA/9JoAP/SaAD/0mgA////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/\n0mgA///////////////////////////////////////SaAD/AGDqQgDtFEViSk3DAFBDQwDt\nFEWBDzbDVjWCQ6scFEWzmfDCq0q2Q6scFEUbsFDCANjWQwDtFEWALbzCAOj9QwDtFEUz/jfD\nALgIRADtFEWiMHXDAAAAAAAAAAAAAAAAAGDqQgALEEVM2jfDAFBDQwALEEUugynDALiIQwAL\nEEUTSSbDAMivQwALEEVcrTPDVlXQQ1bbEEXKgiPDAOj9QwB8EkUSSQzDAHwSRAALEEXmcmLD\nAEAcRACaDUW+uJDDAGDqQgApC0Ws7JzDAFBDQwApC0VovZnDALiIQwApC0UFGJfDAMivQwAp\nC0UWcJPDVlXQQ6tYCkXYZ43DAOj9QwC4CEWIMoXDVr0VRKtYCkViV4fDq8IiRKtYCkW/TY7D\nAGDqQgBHBkVTcHjDAFBDQwBHBkXvy3DDALiIQwBHBkXQKG3DAMivQwBHBkUeaGjDANjWQwBH\nBkXl82PDAOj9QwBHBkVFvl7DAHwSRABHBkWY2FrDAAQmRABHBkVvoX/DAGDqQgBlAUWGGR7D\nAFBDQwBlAUWAhRfDALiIQwBlAUXInxfDAMivQwBlAUXRhhPDANjWQwBlAUUW1Q7DAOj9QwBl\n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\nAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "CC_Sel_5": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 616,
        "objects": {
          "625": {
            "id": 625,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "623": {
            "id": 623,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                264.6663818359375
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "624": {
            "id": 624,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "622": {
            "id": 622,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "616": {
            "id": 616,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 616,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4851.8525390625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4790.99560546875
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1.157703042030334,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703012466431,
                  -17490.365234375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -386.3800964355469,
                264.6663818359375
              ],
              "windowRect": [
                1220,
                784,
                1365,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              622,
              625,
              623,
              624
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 279,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 1116,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 7812
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 10692
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10696
            }
          ],
          "buffers": [
            {
              "byteLength": 10699,
              "bytes": "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\n4bzBAXw/AAAAAAAAAAAAAAAAohhVPi/1lz78lm4/x0JQPmCT4z4zVV8/AAAAAAAAAAAAAAAA\n9FxYPkjlL7+W9jE/Vyl2PtGuLL8isDI/IoI7PvmLJ79Jyzs//ZATPmV3I7+dh0E/OI39PZ1J\nG79dCkk/sCugPc+uJ79NZkA/7rQcvQQoFr9NG08/iOuLPMgaL78Usjo/ymvzPqgTEb/eQyw/\nPWB8PmGD6L7mLVs/4FWOPnx43b6skFs/m6xKPkjOyL5M+WU/kJIfPjujvr4+OGo//+fHPetf\n7r4KLmE/IhTAPb2sDr/8MVM/aXCqvB+eJr+mSEI/XOkBPilQRL/3ECE/6GmoPuBcS79duQI/\n///////////SaAD/0mgA/9JoAP///////////////////////////9JoAP/SaAD/0mgA/9Jo\nAP///////////////////////////9JoAP/SaAD/0mgA/9JoAP//////////////////////\n///////////SaAD/0mgA////////////////////////////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP///////////9JoAP//////0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP///////////9JoAP/SaAD/AEAcQwB8EkW2ZutCVlVQQ6sc\nFEWiUKfCALiIQwDtFEW73krDAMivQwDtFEXjYHDDVlXQQ6scFEVfak/DAGDqQwB8EkVnFM/C\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAcQwALEEWYKvJCAFBDQwALEEXp/qZCALiIQwAL\nEEUk7KBBAMivQwALEEWIjEjCVlXQQ1bbEEViJsPCAGDqQwB8EkVnFM/CAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAEAcQwCaDUV57vhCVlVQQ1b5C0UD+KhCALiIQwApC0WY94NCVkWpQ1b5\nC0VEn+lBANjWQwApC0UGYvbCAOj9QwC4CEWC6iXDALgIRAC4CEWtyQTDAAAAAAAAAAAAAAAA\nAGDqQgDWA0X434/DVlVQQ6t2BUVoUzPDALiIQwBHBkVDkOzCVkWpQ6t2BUWA8zXDq1rdQ6t2\nBUWAlo3DAOj9QwBHBkUcUkzDqzoPRKt2BUVC8lfDAEAcRADWA0ULe7TDAGDqQgBlAUWCvHPD\nAFBDQwBlAUVjh3zDALiIQwBlAUUlBoPDAMivQwBlAUVwx4fDANjWQwBlAUX4eo3DAOj9QwBl\n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\nAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "CC_Sel_6": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 626,
        "objects": {
          "635": {
            "id": 635,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "633": {
            "id": 633,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                321.2802734375
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "634": {
            "id": 634,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "632": {
            "id": 632,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "626": {
            "id": 626,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 626,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4930.72119140625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4854.95166015625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1.267307996749878,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.86370325088501,
                  -17774.6796875
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -472.8195495605469,
                321.2802734375
              ],
              "windowRect": [
                1240,
                784,
                1385,
                1284
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              632,
              635,
              633,
              634
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5121,
              "count": 279,
              "type": "VEC4",
              "normalized": true
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 1116,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 7812
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 10692
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 10696
            }
          ],
          "buffers": [
            {
              "byteLength": 10699,
              "bytes": "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\nyr6wCV8/AAAAAAAAAAAAAAAAJ0iJPvklpL1jxXU/S/iNPlUOZr2AinU/8O6gPsYNLL1xyXI/\ntmOcPoELAr/lLU4/bE9sPrpzC78qZU4/eliPPlhqEL/N2kY/+eOePqx/C78ZaUc/UtRvPmEf\n/b4hTFY/ihZIPkAsD7+xPU4/mWYpPnmFMr9ohzI/ZxEXPsi1Ur9DZQw/Y40JPrkXYb8T++k+\ncqCjPmwM1b4Q71k/WOekPgkSyL4OwFw/qB6nPm7Nur7sOV8/nCeYPug5xb7lqF8/DYZ3Pghq\nz75/uWE/RepdPs5L3r731l8/ywNqPi1++L7vC1g/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/////////////////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD/////////////////0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/////////////////\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/////////////////0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9Jo\nAP/////////////////SaAD/0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD////////////SaAD/\n0mgA/9JoAP/SaAD/0mgA/9JoAP/SaAD/////////////////AGDqQgDtFEWK4jjDAFBDQwDt\nFEW1lDvDALiIQwDtFEV8p2LDAMivQwDtFEXn5VvDANjWQwDtFEXeuFzDAOj9QwDtFEVln4DD\nqzoPRKscFEUb95nDAEAcRAB8EkUbMqzDAGDqQgALEEVj4l7DAFBDQwALEEVIj2nDALiIQwAL\nEEV0oIvDAMivQwALEEVhY4rDANjWQwALEEWBb4zDAOj9QwALEEW0OZLDAHwSRAALEEWwlq/D\nAEAcRAALEEXwlMnDAGDqQgApC0Vs1YvDAFBDQwApC0UfzpLDALiIQwApC0XwMZrDAMivQwAp\nC0XbL6DDANjWQwApC0XNkKbDAOj9QwApC0Vehq3DAHwSRAApC0V8XrfDAEAcRAApC0XTqb3D\nAGDqQgBHBkWIjR3DAFBDQwBHBkUzvyzDALiIQwBHBkVCvjrDAMivQwBHBkV/ukfDANjWQwBH\nBkWQj1bDAOj9QwBHBkUKUmbDAHwSRABHBkWEj3rDq8IiRKt2BUWQN5jDAGDqQgBlAUVcVqPC\nAFBDQwBlAUWpycLCALiIQwBlAUWlEePCAMivQwBlAUU+IgPDANjWQwBlAUWdaBXDAOj9QwBl\n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\nAQEBAQAAAA=="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "bul_x3pui": {
      "html": "<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" id=\"upload_button-label\" for=\"upload_button\">Select Bullet Land x3p files<\/label>\n  <div class=\"input-group\">\n    <label class=\"input-group-btn input-group-prepend\">\n      <span class=\"btn btn-default btn-file\">\n        Browse...\n        <input id=\"upload_button\" class=\"shiny-input-file\" name=\"upload_button\" type=\"file\" style=\"position: absolute !important; top: -99999px !important; left: -99999px !important;\" multiple=\"multiple\" accept=\".x3p\"/>\n      <\/span>\n    <\/label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"No file selected\" readonly=\"readonly\"/>\n  <\/div>\n  <div id=\"upload_button_progress\" class=\"progress active shiny-file-input-progress\">\n    <div class=\"progress-bar\"><\/div>\n  <\/div>\n<\/div>",
      "deps": [

      ]
    },
    "bullSelCheckboxUI": {
      "html": "<div id=\"bull_sel_checkbox\" class=\"form-group shiny-input-checkboxgroup shiny-input-container\" role=\"group\" aria-labelledby=\"bull_sel_checkbox-label\">\n  <label class=\"control-label\" id=\"bull_sel_checkbox-label\" for=\"bull_sel_checkbox\">Select Bullets to Compare<\/label>\n  <div class=\"shiny-options-group\">\n    <div class=\"checkbox\">\n      <label>\n        <input type=\"checkbox\" name=\"bull_sel_checkbox\" value=\"Bullet 1\" checked=\"checked\"/>\n        <span>Bullet 1<\/span>\n      <\/label>\n    <\/div>\n    <div class=\"checkbox\">\n      <label>\n        <input type=\"checkbox\" name=\"bull_sel_checkbox\" value=\"Bullet 2\" checked=\"checked\"/>\n        <span>Bullet 2<\/span>\n      <\/label>\n    <\/div>\n  <\/div>\n<\/div>",
      "deps": [

      ]
    },
    "grooveBullSelUI": {
      "html": "<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" id=\"groove_bulsel-label\" for=\"groove_bulsel\">Select Bullet<\/label>\n  <div>\n    <select id=\"groove_bulsel\" class=\"shiny-input-select\"><option value=\"Bullet 1\" selected>Bullet 1<\/option>\n<option value=\"Bullet 2\">Bullet 2<\/option><\/select>\n    <script type=\"application/json\" data-for=\"groove_bulsel\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script>\n  <\/div>\n<\/div>",
      "deps": [
        {
          "name": "selectize",
          "version": "0.15.2",
          "src": {
            "href": "selectize-0.15.2"
          },
          "meta": null,
          "script": [
            "js/selectize.min.js",
            "accessibility/js/selectize-plugin-a11y.min.js"
          ],
          "stylesheet": "css/selectize.bootstrap3.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "grooveLandSelUI": {
      "html": "<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" id=\"groove_landsel-label\" for=\"groove_landsel\">Select Land<\/label>\n  <div>\n    <select id=\"groove_landsel\" class=\"shiny-input-select\"><option value=\"1\" selected>1<\/option>\n<option value=\"2\">2<\/option>\n<option value=\"3\">3<\/option>\n<option value=\"4\">4<\/option>\n<option value=\"5\">5<\/option>\n<option value=\"6\">6<\/option><\/select>\n    <script type=\"application/json\" data-for=\"groove_landsel\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script>\n  <\/div>\n<\/div>",
      "deps": [
        {
          "name": "selectize",
          "version": "0.15.2",
          "src": {
            "href": "selectize-0.15.2"
          },
          "meta": null,
          "script": [
            "js/selectize.min.js",
            "accessibility/js/selectize-plugin-a11y.min.js"
          ],
          "stylesheet": "css/selectize.bootstrap3.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "groovePlotsUI": {
      "html": "<div class=\"shiny-plot-output html-fill-item\" id=\"profile_plot\" style=\"width:100%;height:400px;\"><\/div>",
      "deps": [
        {
          "name": "htmltools-fill",
          "version": "0.5.8.1",
          "src": {
            "href": "htmltools-fill-0.5.8.1"
          },
          "meta": null,
          "script": null,
          "stylesheet": "fill.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "grooveSlidersUI": {
      "html": "<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" id=\"grooveL-label\" for=\"grooveL\">Left Groove<\/label>\n  <input class=\"js-range-slider\" id=\"grooveL\" data-skin=\"shiny\" data-min=\"0\" data-max=\"1136\" data-from=\"290.0390625\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.96491228070176\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n<\/div>\n<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" id=\"grooveR-label\" for=\"grooveR\">Right Groove<\/label>\n  <input class=\"js-range-slider\" id=\"grooveR\" data-skin=\"shiny\" data-min=\"1136\" data-max=\"2273\" data-from=\"1983.3984375\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.97368421052632\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/>\n<\/div>",
      "deps": [
        {
          "name": "ionrangeslider-javascript",
          "version": "2.3.1",
          "src": {
            "href": "ionrangeslider-javascript-2.3.1"
          },
          "meta": null,
          "script": "js/ion.rangeSlider.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "strftime",
          "version": "0.9.2",
          "src": {
            "href": "strftime-0.9.2"
          },
          "meta": null,
          "script": "strftime-min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "ionrangeslider-css",
          "version": "2.3.1",
          "src": {
            "href": "ionrangeslider-css-2.3.1"
          },
          "meta": null,
          "script": null,
          "stylesheet": "css/ion.rangeSlider.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "groovesButtonsUI": {
      "html": "<div class=\"row\">\n  <div class=\"col-sm-12\" align=\"center\">\n    <button id=\"save_grooves_button\" type=\"button\" class=\"btn btn-default action-button\">Save Grooves<\/button>\n  <\/div>\n<\/div>\n<hr/>\n<div class=\"row\">\n  <div class=\"col-sm-12\" align=\"center\">\n    <button id=\"grooves_next_button\" type=\"button\" class=\"btn btn-default action-button\">Next Step<\/button>\n  <\/div>\n<\/div>",
      "deps": [

      ]
    },
    "lpupload": {
      "html": "<div class=\"bslib-grid bslib-mb-spacing html-fill-item\" data-require-bs-caller=\"layout_column_wrap()\" data-require-bs-version=\"5\" style=\"grid-template-columns:repeat(6, minmax(0, 1fr));grid-auto-rows:1fr;--bslib-grid-height:auto;--bslib-grid-height-mobile:auto;\">\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 1<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl1-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl1-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl1\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl1-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 2<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl2-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl2-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl2\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl2-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 3<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl3-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl3-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl3\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl3-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 4<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl4-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl4-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl4\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl4-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 5<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl5-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl5-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl5\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl5-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n  <div class=\"bslib-grid-item bslib-gap-spacing html-fill-container\">\n    <div class=\"card bslib-card bslib-mb-spacing html-fill-item html-fill-container\" data-bslib-card-init data-require-bs-caller=\"card()\" data-require-bs-version=\"5\" style=\"max-height:600px;\">\n      <div class=\"card-header bg-dark\">Land 6<\/div>\n      <div class=\"card-body bslib-gap-spacing html-fill-item html-fill-container\" style=\"margin-top:auto;margin-bottom:auto;flex:1 1 auto;\">\n        <p id=\"x3prgl6-aria\" hidden>3D plot<\/p>\n        <div class=\"html-fill-item\">\n          <p id=\"x3prgl6-aria\" hidden>3D plot 1<\/p>\n          <div id=\"x3prgl6\" style=\"width:200px;height:600px;\" class=\"rglWebGL html-widget html-widget-output shiny-report-size\" role=\"img\" aria-labelledby=\"x3prgl6-aria\"><\/div>\n        <\/div>\n      <\/div>\n      <script data-bslib-card-init>bslib.Card.initializeAllCards();<\/script>\n    <\/div>\n  <\/div>\n<\/div>",
      "deps": [
        {
          "name": "htmltools-fill",
          "version": "0.5.8.1",
          "src": {
            "href": "htmltools-fill-0.5.8.1"
          },
          "meta": null,
          "script": null,
          "stylesheet": "fill.css",
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "htmlwidgets",
          "version": "1.6.4",
          "src": {
            "href": "htmlwidgets-1.6.4"
          },
          "meta": null,
          "script": "htmlwidgets.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "rglWebGL-binding",
          "version": "1.3.24",
          "src": {
            "href": "rglWebGL-binding-1.3.24"
          },
          "meta": null,
          "script": "rglWebGL.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "bslib-component-js",
          "version": "0.9.0",
          "src": {
            "href": "bslib-component-js-0.9.0"
          },
          "meta": null,
          "script": [
            {
              "src": "components.min.js"
            },
            {
              "src": "web-components.min.js",
              "type": "module"
            }
          ],
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "bslib-component-css",
          "version": "0.9.0",
          "src": {
            "href": "bslib-component-css-0.9.0"
          },
          "meta": null,
          "script": null,
          "stylesheet": "components.css",
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "bslib-tag-require",
          "version": "0.9.0",
          "src": {
            "href": "bslib-tag-require-0.9.0"
          },
          "meta": null,
          "script": "tag-require.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "prevSelUI": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "profile_plot": {
      "src": "[image data hash: eada9570e3c47fe761ed59596be5474f]",
      "width": 716,
      "height": 400,
      "alt": "Plot object",
      "coordmap": {
        "panels": [
          {
            "panel": 1,
            "row": 1,
            "col": 1,
            "panel_vars": {
              "panelvar1": "1",
              "panelvar2": "Bullet 1"
            },
            "log": {
              "x": null,
              "y": null
            },
            "domain": {
              "left": -113.671875,
              "right": 2387.109375,
              "bottom": -88.87796338967746,
              "top": 52.57704306131927
            },
            "mapping": {
              "x": "x",
              "y": "value",
              "panelvar1": "land",
              "panelvar2": "bullet"
            },
            "range": {
              "left": 35.85380993150681,
              "right": 693.7505827392395,
              "bottom": 368.8464731501983,
              "top": 22.24941726076062
            }
          }
        ],
        "dims": {
          "width": 716,
          "height": 400
        }
      }
    },
    "report1-report": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "report1-reportDownUI": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "reportSelUI": {
      "message": "",
      "call": "NULL",
      "type": [
        "shiny.silent.error",
        "validation"
      ]
    },
    "x3prgl1": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 246,
        "objects": {
          "255": {
            "id": 255,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "253": {
            "id": 253,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                498.4640197753906
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "254": {
            "id": 254,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "252": {
            "id": 252,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "246": {
            "id": 246,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 246,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                5007.466796875
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -5049.04931640625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.705736875534058,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703966140747,
                  -18051.33984375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -415.2988891601562,
                498.4640197753906
              ],
              "windowRect": [
                480,
                525,
                625,
                1025
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              252,
              255,
              253,
              254
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 6712
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9592
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 9596
            }
          ],
          "buffers": [
            {
              "byteLength": 9599,
              "bytes": "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\nqSkJPgsvo77dNnA/NhI2Prvpp77zhG0/+tRwPpmiqb6m6mk/WxOAPgCHoL5zgWo/HbCEPvj9\nmL5/H2s/WxyDPuwsmr6lJms/4RF+PsqTn74hz2o/F8J/Pt+Epr5afGk/iYp+PhVGqr4f5Gg/\nwTg3PpV+pb5b420/oZpVPmhJrb7+5Wo/dPtyPg4aub5G02Y/w/J2Ptaywb4symQ/u0SCPkEu\nyL7acGI/Anp8Pk6Myb5GtWI/AHKCPihsy74gsWE/brGFPspj1b4D5l4/QhN5Ptnm3L7uZF4/\ndp5WPrJ0175V8mE/PvJkPomT2b4tjmA/64t3Pntb3b4/Y14/wGB/Pl/u4b6CrVw/jeGDPiuF\n5r4Q3lo/6odyPtHN6r5vQ1s/6SuFPmxd7L5FG1k/hZ+LPhmg7770MFc/w0BxPgG387506Fg/\nRn5QPkoq/r7PB1g/Q/lgPlhB/b5OQ1c/PlJ3PqDW/b5cjVU/MGl9PsG9/741iVQ/sCKBPgGE\n/r7DiVQ/t7FqPtbu/L5TtVY/zQSCPl3d9b6T71Y/jhaRPrqz8r4Ia1U//D6EPsmj9r6WX1Y/\nJihFPolnG79xX0U/fUBUPs0uHL8DxkM/jtRmPlO5Hb8INUE/R3BoPsxdH7+0uz8/LK9pPrLk\nIL+/Wz4/qB1QPiSpIr/itT4/j9pbPpOIIb9q2D4/OyyEPjbnH7+vrTw/MNGGPovJIL+WdDs/\nv1dGPtBAMb+27TE/dNNLPqsYMb+AsjE/QQBUPmOQML8QoTE/jERaPrgkML+HkjE/yxJgPjn6\nL7/lSDE/V5ZQPrC2Mb+ruzA/gq1RPh8fNL9PMi4/DZFoPipUM78YMi0/ZvttPmb6Mb9rIC4/\n5idVPvQvJr+ZSjs/3zdWPq3aJb/Dgjs/SYJdPp5eJb/JaDs/pWxmPsY3Jb/a3jo/IaBsPpow\nJb8PaTo/q95qPusTJr9Swjk/sNxtPnBhJ7+qWDg/r7huPkZ6KL9GRjc/rxtnPoMwKb+HOjc/\nXpFAPjPjK7+NgDc/LqlSPjfnK7+fPTY/Y+JfPrNiLb/O1TM/ODJcPmiuLr/+3DI/EBJiPt4l\nLr/f7DI/W2BnPmgBLr/EozI/x6tkPnBBLb91lTM/gjFrPnOTK7+qqjQ/Ez91PvjKKr/AkjQ/\nuNNIPklf7b7hMl0/SX9zPiEp5L6E8Vw/NhOGPsSSy74bIGE/1eJ7PqMtr744KWg/g8aBPiIc\n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"
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "x3prgl2": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 256,
        "objects": {
          "265": {
            "id": 265,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "263": {
            "id": 263,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                248.5069885253906
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "264": {
            "id": 264,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "262": {
            "id": 262,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "256": {
            "id": 256,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 256,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4866.3134765625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4775.14501953125
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.705736875534058,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.86370325088501,
                  -17542.49609375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -430.8441467285156,
                248.5069885253906
              ],
              "windowRect": [
                500,
                545,
                645,
                1045
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              262,
              265,
              263,
              264
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 6712
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9592
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 9596
            }
          ],
          "buffers": [
            {
              "byteLength": 9599,
              "bytes": "AECcQgBeF0UAAMB/AEAcQwBeF0XdaMTDAGBqQwBeF0UAAMB/AECcQwBeF0UAAMB/AFDDQwBe\nF0UAAMB/AGDqQwBeF0UAAMB/ALgIRABeF0UAAMB/AEAcRABeF0UAAMB/AMgvRABeF0UAAMB/\nAECcQgB8EkVoo7bDAEAcQwB8EkWkirHDAGBqQwB8EkUeEaLDAECcQwB8EkUwrpDDAFDDQwB8\nEkXEK43DAGDqQwB8EkXp7ovDALgIRAB8EkUAAMB/AEAcRAB8EkUAAMB/AMgvRAB8EkUAAMB/\nAECcQgCaDUUHgL7DAEAcQwCaDUXQ67jDAGBqQwCaDUWJ6bPDAECcQwCaDUXoe67DAFDDQwCa\nDUXP+I3DAGDqQwCaDUU5NZDDALgIRACaDUUz0aDDAEAcRACaDUUAAMB/AMgvRACaDUUAAMB/\nAECcQgC4CEWY1JrDAEAcQwC4CEWtBZfDAGBqQwC4CEXXYJPDAECcQwC4CEXaX5DDAFDDQwC4\nCEXH34zDAGDqQwC4CEW7IYrDALgIRAC4CEVWS4fDAEAcRAC4CEUAAMB/AMgvRAC4CEUAAMB/\nAECcQgDWA0XiX17DAEAcQwDWA0W2/lLDAGBqQwDWA0XpR03DAECcQwDWA0UzmkbDAFDDQwDW\nA0V/F0DDAGDqQwDWA0WGLDzDALgIRADWA0UDtDvDAEAcRADWA0X8yZPDAMgvRADWA0UAAMB/\nAECcQgDo/UQu8hrDAEAcQwDo/UTn9RbDAGBqQwDo/UQWpRDDAECcQwDo/USieQvDAFDDQwDo\n/US5AgfDAGDqQwDo/URyJPbCALgIRADo/UR0Q/rCAEAcRADo/UQzTyvDAMgvRADo/USLWbTD\nAECcQgAk9EQzoKrCAEAcQwAk9ERf/J7CAGBqQwAk9ETvc5LCAECcQwAk9ESANIvCAFDDQwAk\n9ET6L3/CAGDqQwAk9ESZ7HrCALgIRAAk9ET68m/CAEAcRAAk9ESSXtLCAMgvRAAk9EQU2ILD\nAECcQgBg6kRuu7TAAEAcQwBg6kRITk1AAGBqQwBg6kRI9RlBAECcQwBg6kTf9gpBAFDDQwBg\n6kQbURFBAGDqQwBg6kSUZllBALgIRABg6kRvyCJBAEAcRABg6kRTIBVBAMgvRABg6kTXYC/D\nAECcQgCc4ERfkUpCAEAcQwCc4ESwv1VCAGBqQwCc4ESrGGJCAECcQwCc4EQGAHFCAFDDQwCc\n4ER7WHRCAGDqQwCc4ERBvHBCALgIRACc4ET4FWJCAEAcRACc4ESrL1FCAMgvRACc4EQI0dDC\nAECcQgDY1kQ0d89CAEAcQwDY1kR1kddCAGBqQwDY1kTft9tCAECcQwDY1kTAlNxCAFDDQwDY\n1kROjeFCAGDqQwDY1kQePuJCALgIRADY1kQO0N1CAEAcRADY1kTBJc1CAMgvRADY1kQSyBTC\nAECcQgAUzUSJsQ1DAEAcQwAUzURsoxFDAGBqQwAUzURxlBdDAECcQwAUzURNvx9DAFDDQwAU\nzUQzECVDAGDqQwAUzUQHSCVDALgIRAAUzUTrwiNDAEAcRAAUzUTJphpDAMgvRAAUzUSxbI7A\nAECcQgBQw0QevitDAEAcQwBQw0RIpzJDAGBqQwBQw0TjIThDAECcQwBQw0SyA0BDAFDDQwBQ\nw0R+t0RDAGDqQwBQw0RZmEBDALgIRABQw0TUIzlDAEAcRABQw0QHaCxDAMgvRABQw0RsBC1C\nAECcQgCMuUTVEEhDAEAcQwCMuUTX205DAGBqQwCMuURC+FBDAECcQwCMuUQ85FlDAFDDQwCM\nuUSo8FhDAGDqQwCMuUQg2lVDALgIRACMuURGdlhDAEAcRACMuURGMUpDAMgvRACMuUQd37NC\nAECcQgDIr0S8q11DAEAcQwDIr0Qs4F5DAGBqQwDIr0TRmGNDAECcQwDIr0RJWGtDAFDDQwDI\nr0SBF3BDAGDqQwDIr0TGa3BDALgIRADIr0RWemtDAEAcRADIr0TODl1DAMgvRADIr0RTNgtD\nAECcQgAEpkRrmWlDAEAcQwAEpkRgl2tDAGBqQwAEpkRjtGhDAECcQwAEpkTRcHRDAFDDQwAE\npkSZ/3RDAGDqQwAEpkTmFXBDALgIRAAEpkTU7mpDAEAcRAAEpkQjEmVDAMgvRAAEpkSlKUBD\nAECcQgBAnEQ/mGlDAEAcQwBAnERM3WxDAGBqQwBAnERwNm5DAECcQwBAnETKgXhDAFDDQwBA\nnET59XRDAGDqQwBAnESzp3FDALgIRABAnERzPWxDAEAcRABAnESxAXBDAMgvRABAnERlGipD\nAECcQgB8kkQV6nFDAEAcQwB8kkTOCXJDAGBqQwB8kkQgGHBDAECcQwB8kkQYoXBDAFDDQwB8\nkkQtAW5DAGDqQwB8kkT82WJDALgIRAB8kkRZOlxDAEAcRAB8kkTtu1FDAMgvRAB8kkTXQUlD\nAECcQgC4iEQbmGhDAEAcQwC4iEQJCWdDAGBqQwC4iEStdGdDAECcQwC4iET/nmRDAFDDQwC4\niESG8WNDAGDqQwC4iESbCFxDALgIRAC4iEQNmVZDAEAcRAC4iERRhE9DAMgvRAC4iEShUkRD\nAECcQgDofUSXaFZDAEAcQwDofURn9FBDAGBqQwDofUR/YU5DAECcQwDofUR0FlFDAFDDQwDo\nfUS0Y1JDAGDqQwDofUROpUtDALgIRADofUQ/Aj9DAEAcRADofUTQezRDAMgvRADofUQ3eitD\nAECcQgBgakSZO0FDAEAcQwBgakQF0T5DAGBqQwBgakQoej1DAECcQwBgakTvoz1DAFDDQwBg\nakSk30FDAGDqQwBgakTBHzZDALgIRABgakQuiy5DAEAcRABgakQvpSJDAMgvRABgakRyKRlD\nAECcQgDYVkTkyCJDAEAcQwDYVkQe5CJDAGBqQwDYVkT4miFDAECcQwDYVkR5OBpDAFDDQwDY\nVkQGQxVDAGDqQwDYVkQ1ew5DALgIRADYVkT3dQdDAEAcRADYVkQHa/tCAMgvRADYVkQ+YuhC\nAECcQgBQQ0Ra1PlCAEAcQwBQQ0StX/VCAGBqQwBQQ0TKUepCAECcQwBQQ0Rs4thCAFDDQwBQ\nQ0RGc9ZCAGDqQwBQQ0RqyMVCALgIRABQQ0Q1b7lCAEAcRABQQ0SmhKdCAMgvRABQQ0SsHZ1C\nAECcQgDIL0StwZFCAEAcQwDIL0R1bYRCAGBqQwDIL0R1rXFCAECcQwDIL0QhtF9CAFDDQwDI\nL0T2HUBCAGDqQwDIL0QXZhJCALgIRADIL0S0VfVBAEAcRADIL0TmEcxBAMgvRADIL0SH3ZlB\nAECcQgBAHEQtW89BAEAcQwBAHEQ42LJBAGBqQwBAHESbaWxBAECcQwBAHESPNBdBAFDDQwBA\nHEQIeZI/AGDqQwBAHEQI4LbAALgIRABAHETmuYfBAEAcRABAHETW+LjBAMgvRABAHETnnAnC\nAECcQgC4CESktyjCAEAcQwC4CETqdETCAGBqQwC4CETBF1XCAECcQwC4CER5gm7CAFDDQwC4\nCESENYvCAGDqQwC4CESAlJvCALgIRAC4CEQChq/CAEAcRAC4CERAZb/CAMgvRAC4CEQIuNDC\nAECcQgBg6kOUtNDCAEAcQwBg6kNRGtjCAGBqQwBg6kNYiufCAECcQwBg6kNDcPPCAFDDQwBg\n6kNKZQLDAGDqQwBg6kONCg3DALgIRABg6kNBuQ3DAEAcRABg6kPmFCDDAMgvRABg6kOnaijD\nAECcQgBQw0NBPjfDAEAcQwBQw0PYKkPDAGBqQwBQw0P4+EfDAECcQwBQw0PlxkzDAFDDQwBQ\nw0OvRlbDAGDqQwBQw0PFOWHDALgIRABQw0PZoWvDAEAcRABQw0OD1nPDAMgvRABQw0Nh7H3D\nAECcQgBAnEOR1YPDAEAcQwBAnEOmhYnDAGBqQwBAnEPWAYjDAECcQwBAnEOC0ZHDAFDDQwBA\nnENZRZPDAGDqQwBAnENEL5nDALgIRABAnEO9C5/DAEAcRABAnEMnX6TDAMgvRABAnEMbQarD\nAECcQgBgakPtGYzDAEAcQwBgakMmtpDDAGBqQwBgakNqSZXDAECcQwBgakP1mpnDAFDDQwBg\nakMDsJ/DAGDqQwBgakOwzaTDALgIRABgakObe6jDAEAcRABgakNrxaXDAMgvRABgakOaqobD\nAECcQgBAHEPg/bvDAEAcQwBAHEPl3bvDAGBqQwBAHENlH7zDAECcQwBAHENhb7zDAFDDQwBA\nHEM7C7zDAGDqQwBAHEMDV7vDALgIRABAHEN7F7vDAEAcRABAHENtyLnDAMgvRABAHENqjrvD\nAECcQgBAnELS2NLDAEAcQwBAnEKxNdLDAGBqQwBAnELgONXDAECcQwBAnELbLNTDAFDDQwBA\nnEJhcNLDAGDqQwBAnEIgEtXDALgIRABAnEJAUNbDAEAcRABAnEINbNfDAMgvRABAnEIAAMB/\nAAAAAAAAAAAAAAAA8z9pvgbW2D4jdWA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nIawIvgPolTyUqn0/C5o8vk+wdr4I8nM/gjqMvi97f75ayG0/RfmXvp9SzL6pF14/FN49vq7P\nT75FI3Y/kBQQPqVqn70vq3w/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nne79vRrLhj6063Q/HmcevmCAbz6dunU/GYFDvg0HFD4RjXg/VYCdvrcJJz3RXHM/l50vvoQ5\nDTyQMnw/pM1DPR91/j2tuH0/Rw2CPuZrVT5pyXE/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nyputvWcSNT8vqTM/jN+dvRlxND8EhTQ/BHCNvZZeMj8kxzY/qxQKvnUmIT8z5UM/7RkAvsut\nBT+39lc/WILFPO/SAz8PXVs/sqFIPn4OFT/v/kk/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nbbugvWUyMT/Iqjc/ffuKvYloMD9Vszg/9zJrvaNSLz8+9jk/GOhovWpjLj+H2To/MudvvSaQ\nLj/fpjo/44QMveWxLz/8+zk/3xwtPhxqMT9caDM/PCMmP2fTFj88dvY+AAAAAAAAAAAAAAAA\nJjx5vaNfJj/y8EE/IVh5vWRsJT9xwEI/vXNjvXcNJD8LA0Q/YuhTve/hIj+NDUU/tgR/vZtp\nIT96D0Y/B1kNvWgBIT+l1UY/ViZ5PhTiJD8ZqTk/luIaPyJEDj8S+BE/WS5SP9VQ4j4p/bg+\n0KxkvXrVMT8fmDc/D/VnvWeQMj8z3jY/VRItvbmLMj/vIzc/GEQGves1MD+Mgzk/lmsovSCk\nLD+3uzw/DA67vOI7KT96/j8/E48UPpCYKz9mTzo/dBgZPx2+FD/GUw0/0KxRP46B3j5XyL8+\nJ56CvZPTJD9LMkM/rJhwvchMIz8IlEQ/YXAKveCFIT8mbEY/CxB+vFzGID90LUc//MOmvP/e\nHj/Cq0g/6uAcuo+lGz+yP0s/hTONPdlkHT86IEk/MREGP/86Dz+4dSQ/dcVWPxllxD7QpsU+\nnKBGvWdlED93BlM/zfM0vSFGDj8BhlQ/oqntvCZ6Cz/5iVY/lm99vMmtCz/uf1Y/JaMlvP4E\nDD9rTFY/weRYPHS6Cj8eIFc/TrEoPcVGCD/0dFg/ezcCP+TC8j5I+Tc/JkpaPwB4nj4Fetc+\nRIQovSOoAD8+El0/AUYfvRHJAT/6b1w/15cSvZT4BD+0kFo/76YDvaJRCT/S5Vc/0ONzvFn/\nDD9Uo1U/Dg9QPEUZDz/gPlQ/Iw5XPagGDz/E5FM/VLEEP+928T5UoDY/7/FYP2lvkz4AW+Q+\nQDNivcFczz4go2k/QFlkvYQu0z6uxWg/rFOCvYz33D4zW2Y/aHh6vd0p6D6WoWM/7wOnvLDd\n6z5ZKGM/tK3DPFSv4z55NmU/W3KcPTQs1j7cs2c/If4LP45UsT7SIUM/MRlcP0YEYz5Tjus+\n5OaVvbFrtj4Ld24/byGFvfHJtT60vW4/X4Cevf3Psj6FD28/E/qOvRL4rD4JSXA/6vVhu+7f\noj4ls3I/lp0aPXm4nD5FhXM/hy3CPRbfmz4qo3I/BvAJP2mnlD5kcko/kUBWP6O3ZT6km/8+\nJomHvUPbkj5NqHQ/DbthvcpKjj6UgnU/Oq2WvZnwiD4Y9HU/nweBvUN0iD6UNnY/Ib9yOykD\njD59PXY/XHvYPC8ZlD6S9nQ/LkvCPZ2/mD7FIXM/288BP4Oslz5NNE8/MbxHP/O9hj7TRBE/\nj5UOvfZyRz5e8Ho/hJX/vLY8OD4csns/OCuQvdcWJT7yAXw/rLuRvSgBKD6D33s/Bm86uz5h\nLT6DTXw/AMYBPaXBHD5D2nw/G23FPa/LDj5rS3w/qtHXPrnCWz76jGE/uwoqP8MGkT4AGTE/\nazPdvChHqD1rCn8/E5NjvPs6pD2ZJn8/99aHvW1lnT1trX4/xEqOvfYmiD1M0H4/f52JPIjH\nHT0axn8/jOhaPbO9UzzcnH8//SOMPSZkDT09P38/sEqnPvIGvz2WxHA/c6IPP6s16D0x6VE/\n873ivPXYQD0vnn8/6YYqvLD6Oj0huH8/PZBHvWuf5DycmH8/9hcavXjjPrwozX8/GpxPPcE8\nSb2FXH8/VhiTPSYFm70/mn4/Zt1OPZHIw73Uf34/wjWEPnUOmr0okXY/qn75PrCaZrwThV8/\nwHTNu8RAsbxg738/ec19OclX/Lzm4H8/vjYnvCPLf72qfH8/hInPOmTMzr30sH4/IwSLPeTK\n9L3skX0/anK6PUE0BL4RyXw/tr+bPeoBG77JTHw/t+UtPhR+sL2pUHs/27OGPoH6M72fuXY/\nvvzXPNP/Qb7vRXs/eqSaPKI5S7573Ho/E+IdPGU3Ur4PiXo/O/8DPOT/Rr5kHHs/2bFqPfLA\nML7/uns/NlLNPXcSJb5KWHs/e/fQPalkL75O3Ho/sgDwPcR+OL5lBHo/+L7+PRYROb4+w3k/\nSqU8PWlRfL6U03c/ku0EPakagL7bt3c/sMymO+0igb5ZuHc/lRlivOm8dL5Ijng/nIIrPecu\nZ777KHk/267hPUgYbb7FcHc/LJn2PSvgf7509HU/I+72PXo+h75y+HQ/aUbyPeyIib5guXQ/\nvXAAPbkwmL4RTHQ/uAjTPMlIk74qF3U/gQaHPJddlL7V+nQ/OuWoulDBpL42YnI/MO1APYYW\ns76Ihm8/vWLbPUoks77pPm4/p5DyPXVSq757VG8/bIL6Pb7dpr4A/W8/FXrmPVUVp76VQ3A/\n5TBVPNtAzL4tuWo/CPSkPFtizr5QOWo/dcg9Pd1O2L5zumc/Zl0uPRUL6b4Sr2M/ZE5pPfbE\n8r6W62A/4+iwPXDa8L4j0mA/hETFPbBy674N/GE/LuPXPciQ5L7pemM/C0XFPVOQ4L69vGQ/\ng3/yPNV1Ar8hIlw/z1MfPZFVBb8bT1o/v/qCPT2fCL814Fc/vSF2Pa8eCb/+oVc/mjKIPemT\nCr8ok1Y/ilyjPVPbDL+FyVQ/4oufPallDL/LIlU/BFCjPRscCb+jOFc/xmqSPYk4B78Rmlg/\nACNTPcQ4Cb9/tlc/v/dxPZPsCb9BI1c/ZvOCPTNkCr/+vlY/bpyEPRQBC79/VVY/VwutPXnB\nDL8CvFQ/nsm2PZGVDr+ZYlM/JpSTPQlMEL/LplI/CWSSPRbjEb8GkVE/rYabPf6uEr8c6FA/\nZltbPaUfFr926E4/RZ5zPSi/Fb84E08/bQJ3PaydFb9nJ08/ovWSPamCFr/KQ04/1rayPeGl\nFr+oxU0/1L+8PeJHFr+J5k0/EiymPfg9GL+1wkw/FeWhPRgcG7+qpko/EdXAPVMiHL8PcEk/\nL5RUPWqKI78YgUQ/HwZhPTmRI7+QbUQ/1A5vPc3KI7/5LEQ/HJGYPZ72I7+NrEM/VtywPTmw\nJL9RvkI/1iekPeshJL+tYkM/TTW1PZr0Ir87IkQ/uSjAPc0DJb9qPUI//gi2PaLtJr9qwEA/\ngz98PXC9K7+dMD0/nHRxPeGYLL+ldjw/KV1kPfR/Lb9jsjs/o0yQPbYDLb8c0js/+/m4PR++\nLL96gzs/wYWUPQRYLb8fdzs/6bqxPalILb+VHzs/DqjRPS0GLr+H6jk/IrinPUEoL79ChDk/\nFRSvPSIjOL+/fjA/x4dxPT8AOL+xWDE/qURhPX32N781eDE/3b6SPRVKOb/usC8/NqOnPa2x\nOb9q+C4/Q9esPbiTOr/s8i0/GvKsPaKBPL/H2is/dZG8PW1XPL9Txys/C6axPTn0O79DYiw/\nKWb4PfJq8r7KVl8/Y2mUPShD974uZl8/hJ2rPcnt/b57Ql0/lyvkPcoWAb/+OFs/vG/KPXaz\nA7+RD1o/KgHuPeZ1A7/vpFk/O+qxPRkq+L7Fz14/PmFwvB6ww77EiGw/7dVgvaF1mL6S+3M/\ngsO0PQ+9AL8nHlw/cliDPUFTAb88Ulw/yXycPWFX/r4HUV0/UknAPbIX777eF2E/4AesPaKN\n3r6gi2U/71qtPe85yb5wZmo/JJkRPYDOqL64g3E/BvTevaqwgb7/E3Y/OPiwvk4EMr4rEGw/\nPU9mPI9uI7+kAkU/iT/fPKnbIb8dN0Y/oEPpPJ9KHr9XEEk/82SIPJUKF795pk4/pEbRPBc3\nDb+PbVU/XOTxPDweBr+77Fk/teULOmgJBL+EUls/jS3mvaC3D7+n41E/3Ub6veMzH78HBUY/\n0poKvIYwAL8WlV0/lpdbPJB7Ar9IOVw/NRlmPLo6Br8o9Vk/oKWAvF3pBL+jwVo/FRbIurAl\nBL9nQVs/9V+DPOvkCr+DAVc/2PyGO2AdE78ngVE/hOQyPLX3F7/H/k0/AAAAAAAAAAAAAAAA\nzs1NP//+/j7JyEg+AACAP1Y1AkOrHBRFo4e5w6tKNkOrHBRFNqyywwC4iEMAfBJFp1+ZwwDI\nr0MAfBJF+uyOwwDY1kMAfBJFVo2MwwBg6kMAfBJF6e6LwwAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAABg6kIACxBFeea3wwBQQ0MACxBFRhywwwC4iEMACxBFMEmlwwDIr0MACxBFq5OWwwDY\n1kMACxBFLdKNw1Zl90OrOg9Fx1GUwwC4CEQAmg1FM9GgwwAAAAAAAAAAAAAAAABg6kIAKQtF\nh1GqwwBQQ0MAKQtF986lwwC4iEMAKQtFiImhwwDIr0MAKQtFFm2WwwDY1kMAKQtF40uNwwDo\n/UMAKQtF4JyQwwC4CEQAKQtFRA6UwwAAAAAAAAAAAAAAAABg6kIARwZFZKKCwwBQQ0MARwZF\n6kR9wwC4iEMARwZF39h2wwDIr0MARwZFPUxwwwDY1kMARwZFwpFqwwDo/UMARwZFq65mw6s6\nD0SrdgVFOEp7wwBAHEQA1gNF/MmTwwBg6kIAZQFFrNE4wwBQQ0MAZQFFaPgxwwC4iEMAZQFF\nNAAswwDIr0MAZQFFg0smwwDY1kMAZQFFPZYfwwDo/UMAZQFFHgUcwwB8EkQAZQFFO+5Cw6vC\nIkSrlABFYO6JwwBg6kIABvlEL1vrwgBQQ0MABvlEkingwgC4iEMABvlEeHnVwgDIr0MABvlE\nTfHLwgDY1kMABvlEC07AwgDo/UMABvlE7HW5wgB8EkQABvlEes7mwgAEJkQABvlEbrhgwwBg\n6kIAQu9E6z4nwgBQQ0MAQu9EmuMLwgC4iEMAQu9E7Ar5wQDIr0MAQu9EfUPnwQDY1kMAQu9E\nVLfPwQDo/UMAQu9E6unFwQB8EkQAQu9EfK0RwgAEJkQAQu9EkDsFwwBg6kIAfuVEQ0fLQQBQ\nQ0MAfuVESJX1QQC4iEMAfuVE7hQHQgDIr0MAfuVEoBoLQgDY1kMAfuVEqvAPQgDo/UMAfuVE\nfncMQgB8EkQAfuVE9U8AQgAEJkQAfuVEaytawgBg6kIAuttETMydQgBQQ0MAuttEYc2jQgC4\niEMAuttEPnaoQgDIr0MAuttElDOsQgDY1kMAuttEcpWtQgDo/UMAuttE0l2qQgB8EkQAuttE\nKCahQgAEJkQAuttELERUQABg6kIA9tFEpGz5QgBQQ0MA9tFEIrcAQwC4iEMA9tFEg94EQwDI\nr0MA9tFEIvgIQwDY1kMA9tFEfA8LQwDo/UMA9tFEgkQKQwB8EkQA9tFEJ/kEQwAEJkQA9tFE\nP5RXQgBg6kIAMshElm4fQwBQQ0MAMshEQgAlQwC4iEMAMshEVN4rQwDIr0MAMshErGIyQwDY\n1kMAMshEBOozQwDo/UMAMshEyLEwQwB8EkQAMshEZP0oQwAEJkQAMshEQu62QgBg6kIAbr5E\nhVQ9QwBQQ0MAbr5EUqdCQwC4iEMAbr5EhcBIQwDIr0MAbr5EBeRNQwDY1kMAbr5EqAZNQwDo\n/UMAbr5EJANKQwB8EkQAbr5E2gxCQwAEJkQAbr5E++T9QgBg6kIAqrREJd5UQwBQQ0MAqrRE\nRZNYQwC4iEMAqrREZnNeQwDIr0MAqrREK5FjQwDY1kMAqrREhNNjQwDo/UMAqrREoI1iQwB8\nEkQAqrRELMxaQwAEJkQAqrREfRkjQwBg6kIA5qpELW9kQwBQQ0MA5qpEMLFlQwC4iEMA5qpE\nkwVrQwDIr0MA5qpEDThxQwDY1kMA5qpEMmZxQwDo/UMA5qpEtbptQwB8EkQA5qpEhyJmQwAE\nJkQA5qpEOmBDQwBg6kIAIqFElulqQwBQQ0MAIqFE4NdrQwC4iEMAIqFEXPdwQwDIr0MAIqFE\nC7p1QwDY1kMAIqFEy+xyQwDo/UMAIqFEeDpuQwB8EkQAIqFEBxBrQwAEJkQAIqFE99VPQwBg\n6kIAXpdEXJpuQwBQQ0MAXpdEak1vQwC4iEMAXpdEXNxxQwDIr0MAXpdEggZzQwDY1kMAXpdE\nNd5tQwDo/UMAXpdEXj5nQwB8EkQAXpdEWo1iQwAEJkQAXpdEd0ZNQwBg6kIAmo1EQuVsQwBQ\nQ0MAmo1E6SdsQwC4iEMAmo1EOTNrQwDIr0MAmo1EssxpQwDY1kMAmo1EUzVkQwDo/UMAmo1E\nf21cQwB8EkQAmo1E6QRVQwAEJkQAmo1ELbVLQwBg6kIA1oNEib9dQwBQQ0MA1oNE53RbQwC4\niEMA1oNE6OJaQwDIr0MA1oNEqwJbQwDY1kMA1oNEyIBXQwDo/UMA1oNETlJPQwB8EkQA1oNE\n22ZGQwAEJkQA1oNEPvM8QwBg6kIAJHREZ9pJQwBQQ0MAJHRERehGQwC4iEMAJHREg6VGQwDI\nr0MAJHREb79IQwDY1kMAJHREGoJFQwDo/UMAJHREntQ7QwB8EkQAJHREnCsxQwAEJkQAJHRE\nKvEmQwBg6kIAnGBEaG4xQwBQQ0MAnGBEkDIwQwC4iEMAnGBEYrwtQwDIr0MAnGBExL8rQwDY\n1kMAnGBEZ+8mQwDo/UMAnGBEB6ceQwB8EkQAnGBE9pYVQwAEJkQAnGBEUW0LQwBg6kIAFE1E\nwlEPQwBQQ0MAFE1E9BUNQwC4iEMAFE1EYlsHQwDIr0MAFE1ElskBQwDY1kMAFE1ECu74QgDo\n/UMAFE1EfcbqQgB8EkQAFE1EtNLaQgAEJkQAFE1E5RvKQgBg6kIAjDlEyljBQgBQQ0MAjDlE\naj23QgC4iEMAjDlEQPmqQgDIr0MAjDlEsM+fQgDY1kMAjDlEbl+RQgDo/UMAjDlEBnCBQgB8\nEkQAjDlE4aZoQgAEJkQAjDlEFw9PQgBg6kIABCZE/l07QgBQQ0MABCZEucMjQgC4iEMABCZE\nSJIMQgDIr0MABCZEghnlQQDY1kMABCZE6h2gQQDo/UMABCZE/FcyQQB8EkQABCZE3rSAQAAE\nJkQABCZEcIZMwABg6kIAfBJE3BIswQBQQ0MAfBJEFIOCwQC4iEMAfBJEWFmxwQDIr0MAfBJE\nSkbtwQDY1kMAfBJEEPcXwgDo/UMAfBJEfjs8wgB8EkQAfBJE+ItfwgAEJkQAfBJEfMqAwgBg\n6kIA6P1DS9mXwgBQQ0MA6P1DwBqjwgC4iEMA6P1D7jGvwgDIr0MA6P1DZqy+wgDY1kMA6P1D\nbGrRwgDo/UMA6P1DiCjgwgB8EkQA6P1D5KHywgAEJkQA6P1DjCMEwwBg6kIA2NZDI7QTwwBQ\nQ0MA2NZDib0awwC4iEMA2NZDS48gwwDIr0MA2NZDwMonwwDY1kMA2NZDE7wxwwDo/UMA2NZD\n2+c5wwB8EkQA2NZDoVFDwwAEJkQA2NZDnJBOwwBg6kIAyK9D4UdlwwBQQ0MAyK9DsoxrwwC4\niEMAyK9DoxlywwDIr0MAyK9D0k57wwDY1kMAyK9DNg2CwwDo/UMAyK9DNKqHwwB8EkQAyK9D\nxcmMwwAEJkQAyK9DbeCRwwBg6kIAuIhD0oqKwwBQQ0MAuIhDw+GNwwC4iEMAuIhD7i2SwwDI\nr0MAuIhDdZiXwwDY1kMAuIhDlDycwwDo/UMAuIhDE2GhwwB8EkQAuIhD+2qkwwAEJkQAuIhD\nEsSewwBg6kIAUEND9iqlwwBQQ0MAUENDNn+nwwC4iEMAUENDydypwwDIr0MAUENDZXGswwDY\n1kMAUEND/feuwwDo/UMAUEND8+2wwwB8EkQAUENDO8iwwwAEJkQAUENDtnGowwBg6kIAYOpC\nkjrHwwBQQ0MAYOpC99rHwwC4iEMAYOpCIX3IwwDIr0MAYOpC9sXHwwDY1kMAYOpCMLnHwwDo\n/UMAYOpCOHTIwwB8EkQAYOpCDafIw6vCIkRWNQJD90DEwwEBAQEAAAA="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "x3prgl3": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 266,
        "objects": {
          "275": {
            "id": 275,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                29
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "273": {
            "id": 273,
            "type": "light",
            "vertices": [
              [
                -2109.375,
                1171.875,
                243.2497100830078
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "274": {
            "id": 274,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "272": {
            "id": 272,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "266": {
            "id": 266,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 266,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4578.64599609375
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1171.875
                ],
                [
                  0,
                  0,
                  1,
                  -4489.66650390625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.892339468002319,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703727722168,
                  -16505.490234375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2265.625,
                -421.2088317871094,
                243.2497100830078
              ],
              "windowRect": [
                520,
                565,
                675,
                1065
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              272,
              275,
              273,
              274
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 156,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 261,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 261,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 224,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3132,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3132,
              "byteOffset": 3132
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6264
            },
            {
              "buffer": 0,
              "byteLength": 2688,
              "byteOffset": 6280
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 8968
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 8972
            }
          ],
          "buffers": [
            {
              "byteLength": 8975,
              "bytes": "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\nJDnOwwEBAQEAAAA="
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "x3prgl4": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 276,
        "objects": {
          "285": {
            "id": 285,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "283": {
            "id": 283,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                247.5170745849609
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "284": {
            "id": 284,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "282": {
            "id": 282,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "276": {
            "id": 276,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 276,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4869.47265625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4774.294921875
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.705736637115479,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703012466431,
                  -17553.884765625
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -437.8728637695312,
                247.5170745849609
              ],
              "windowRect": [
                540,
                585,
                685,
                1085
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              282,
              285,
              283,
              284
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 6712
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9592
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 9596
            }
          ],
          "buffers": [
            {
              "byteLength": 9599,
              "bytes": "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"
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "x3prgl5": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 286,
        "objects": {
          "295": {
            "id": 295,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "293": {
            "id": 293,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                264.6663818359375
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "294": {
            "id": 294,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "292": {
            "id": 292,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "286": {
            "id": 286,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 286,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4851.8525390625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4790.99560546875
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.705736875534058,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.863703012466431,
                  -17490.365234375
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -386.3800964355469,
                264.6663818359375
              ],
              "windowRect": [
                560,
                605,
                705,
                1105
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              292,
              295,
              293,
              294
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 6712
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9592
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 9596
            }
          ],
          "buffers": [
            {
              "byteLength": 9599,
              "bytes": "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"
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    },
    "x3prgl6": {
      "x": {
        "material": {
          "color": "#000000",
          "alpha": 1,
          "lit": true,
          "ambient": "#000000",
          "specular": "#FFFFFF",
          "emission": "#000000",
          "shininess": 50,
          "smooth": true,
          "front": "filled",
          "back": "filled",
          "size": 3,
          "lwd": 1,
          "fog": true,
          "point_antialias": false,
          "line_antialias": false,
          "texture": null,
          "textype": "rgb",
          "texmode": "modulate",
          "texmipmap": false,
          "texminfilter": "linear",
          "texmagfilter": "linear",
          "texenvmap": false,
          "depth_mask": true,
          "depth_test": "less",
          "isTransparent": false,
          "polygon_offset": [
            0,
            0
          ],
          "margin": "",
          "floating": false,
          "tag": "",
          "blend": [
            "src_alpha",
            "one_minus_src_alpha"
          ]
        },
        "rootSubscene": 296,
        "objects": {
          "305": {
            "id": 305,
            "type": "surface",
            "material": {

            },
            "vertices": "0",
            "colors": "2",
            "dim": [
              [
                9,
                31
              ]
            ],
            "centers": "3",
            "normals": "1",
            "ignoreExtent": false,
            "flipped": false,
            "flags": 32771
          },
          "303": {
            "id": 303,
            "type": "light",
            "vertices": [
              [
                -2265.625,
                1250,
                321.2802734375
              ]
            ],
            "colors": [
              [
                0.1019607856869698,
                0.1019607856869698,
                0.1019607856869698,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ],
              [
                0.4000000059604645,
                0.4000000059604645,
                0.4000000059604645,
                1
              ]
            ],
            "viewpoint": true,
            "finite": true
          },
          "304": {
            "id": 304,
            "type": "light",
            "vertices": [
              [
                0,
                0.258819043636322,
                0.9659258127212524
              ]
            ],
            "colors": [
              [
                1,
                1,
                1,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ],
              [
                0.2000000029802322,
                0.2000000029802322,
                0.2000000029802322,
                1
              ]
            ],
            "viewpoint": true,
            "finite": false
          },
          "302": {
            "id": 302,
            "type": "background",
            "material": {
              "lit": false,
              "back": "lines"
            },
            "colors": "4",
            "centers": "5",
            "sphere": false,
            "fogtype": "none",
            "fogscale": 1,
            "flags": 32768
          },
          "296": {
            "id": 296,
            "type": "subscene",
            "par3d": {
              "antialias": 4,
              "FOV": 30,
              "ignoreExtent": false,
              "listeners": 296,
              "mouseMode": {
                "none": "none",
                "left": "trackball",
                "right": "zoom",
                "middle": "fov",
                "wheel": "pull"
              },
              "observer": [
                0,
                0,
                4930.72119140625
              ],
              "modelMatrix": [
                [
                  1,
                  0,
                  0,
                  -390.625
                ],
                [
                  0,
                  1,
                  0,
                  -1250
                ],
                [
                  0,
                  0,
                  1,
                  -4854.95166015625
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "projMatrix": [
                [
                  9.330126762390137,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  2.705736637115479,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  -3.86370325088501,
                  -17774.6796875
                ],
                [
                  0,
                  0,
                  -1,
                  0
                ]
              ],
              "skipRedraw": false,
              "userMatrix": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "userProjection": [
                [
                  1,
                  0,
                  0,
                  0
                ],
                [
                  0,
                  1,
                  0,
                  0
                ],
                [
                  0,
                  0,
                  1,
                  0
                ],
                [
                  0,
                  0,
                  0,
                  1
                ]
              ],
              "scale": [
                1,
                1,
                1
              ],
              "viewport": {
                "x": 0,
                "y": 0,
                "width": 1,
                "height": 1
              },
              "zoom": 0.4000000059604645,
              "bbox": [
                78.125,
                703.125,
                78.125,
                2421.875,
                -472.8195495605469,
                321.2802734375
              ],
              "windowRect": [
                580,
                625,
                725,
                1125
              ],
              "family": "sans",
              "font": 1,
              "cex": 1,
              "useFreeType": true,
              "fontname": "/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/rgl/fonts/FreeSans.ttf",
              "maxClipPlanes": 6,
              "glVersion": 2.1,
              "activeSubscene": 0
            },
            "embeddings": {
              "viewport": "replace",
              "projection": "replace",
              "model": "replace",
              "mouse": "replace"
            },
            "objects": [
              302,
              305,
              303,
              304
            ],
            "subscenes": [

            ],
            "flags": 33027
          }
        },
        "crosstalk": {
          "key": [

          ],
          "group": [

          ],
          "id": [

          ],
          "options": [

          ]
        },
        "width": 146,
        "height": 501,
        "buffer": {
          "accessors": [
            {
              "bufferView": 0,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 1,
              "componentType": 5126,
              "count": 279,
              "type": "VEC3"
            },
            {
              "bufferView": 2,
              "componentType": 5126,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 3,
              "componentType": 5126,
              "count": 240,
              "type": "VEC3"
            },
            {
              "bufferView": 4,
              "componentType": 5121,
              "count": 1,
              "type": "VEC4"
            },
            {
              "bufferView": 5,
              "componentType": 5121,
              "count": 1,
              "type": "VEC3"
            }
          ],
          "bufferViews": [
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 0
            },
            {
              "buffer": 0,
              "byteLength": 3348,
              "byteOffset": 3348
            },
            {
              "buffer": 0,
              "byteLength": 16,
              "byteOffset": 6696
            },
            {
              "buffer": 0,
              "byteLength": 2880,
              "byteOffset": 6712
            },
            {
              "buffer": 0,
              "byteLength": 4,
              "byteOffset": 9592
            },
            {
              "buffer": 0,
              "byteLength": 3,
              "byteOffset": 9596
            }
          ],
          "buffers": [
            {
              "byteLength": 9599,
              "bytes": "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"
            }
          ]
        },
        "context": {
          "shiny": true,
          "rmarkdown": null
        },
        "vertexShader": "#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}",
        "fragmentShader": "#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}",
        "players": [

        ],
        "webGLoptions": {
          "preserveDrawingBuffer": true
        },
        "fastTransparency": true,
        "altText": "3D plot"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "rglwidgetClass",
          "version": "1.3.24",
          "src": {
            "href": "rglwidgetClass-1.3.24"
          },
          "meta": null,
          "script": "rglClass.min.js",
          "stylesheet": "rgl.css",
          "head": null,
          "attachment": null,
          "all_files": false
        },
        {
          "name": "CanvasMatrix4",
          "version": "1.3.24",
          "src": {
            "href": "CanvasMatrix4-1.3.24"
          },
          "meta": null,
          "script": "CanvasMatrix.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": false
        }
      ]
    }
  },
  "export": {
    "allbull_export": {
      "source": [
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p",
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p"
      ],
      "x3p": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "md5sum": [
        "ca0d4e87feb09b5d76f15be2edc0cce0",
        "bf5d73df16b1f085f815a31e8c314e57",
        "c88128f4e7f39d3cf1917396bbfeac5f",
        "ef4db6d34539f336001397eaa874083c",
        "562541fd2d3febb794762019b360d256",
        "7bc57f9feceb6ce64f66d8eb14b01962",
        "ca0d4e87feb09b5d76f15be2edc0cce0",
        "bf5d73df16b1f085f815a31e8c314e57",
        "c88128f4e7f39d3cf1917396bbfeac5f",
        "ef4db6d34539f336001397eaa874083c",
        "562541fd2d3febb794762019b360d256",
        "7bc57f9feceb6ce64f66d8eb14b01962"
      ],
      "filename": [
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p",
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p"
      ],
      "land_names": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      "bullet_name": [
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p"
      ],
      "bullet": [
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2"
      ],
      "land": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "cbull_export": null,
    "cbull_name_export": "Bullet 2",
    "comparison_export": null,
    "phase_test_export": null,
    "postCC_export": {
      "source": [
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p",
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p"
      ],
      "x3p": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "md5sum": [
        "ca0d4e87feb09b5d76f15be2edc0cce0",
        "bf5d73df16b1f085f815a31e8c314e57",
        "c88128f4e7f39d3cf1917396bbfeac5f",
        "ef4db6d34539f336001397eaa874083c",
        "562541fd2d3febb794762019b360d256",
        "7bc57f9feceb6ce64f66d8eb14b01962",
        "ca0d4e87feb09b5d76f15be2edc0cce0",
        "bf5d73df16b1f085f815a31e8c314e57",
        "c88128f4e7f39d3cf1917396bbfeac5f",
        "ef4db6d34539f336001397eaa874083c",
        "562541fd2d3febb794762019b360d256",
        "7bc57f9feceb6ce64f66d8eb14b01962"
      ],
      "filename": [
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p",
        "Barrel_1-Bullet_2-Land_1.x3p",
        "Barrel_1-Bullet_2-Land_2.x3p",
        "Barrel_1-Bullet_2-Land_3.x3p",
        "Barrel_1-Bullet_2-Land_4.x3p",
        "Barrel_1-Bullet_2-Land_5.x3p",
        "Barrel_1-Bullet_2-Land_6.x3p"
      ],
      "land_names": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      "bullet_name": [
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p",
        "Barrel_1.Bullet_2.Land_.x3p"
      ],
      "bullet": [
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 1",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2",
        "Bullet 2"
      ],
      "land": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ],
      "crosscut": [
        206,
        181,
        156,
        507,
        181,
        156,
        396,
        181,
        156,
        156,
        181,
        156
      ],
      "ccdata": [
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375
          ],
          "y": [
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125,
            203.125
          ],
          "value": [
            -64.30396024370566,
            -64.66452759923413,
            -71.86142465798184,
            -75.04235691158101,
            -75.81448153359815,
            -74.45859955623746,
            -72.6140642655082,
            -70.97113120835274,
            -68.11465573264286,
            -66.13305595237762,
            -26.29783375596162,
            -25.90155963844154,
            -27.93680505419616,
            -33.53207284817472,
            -30.34700057469308,
            -36.11444481066428,
            -49.98225995223038,
            -55.4790603928268,
            -68.5344057274051,
            -71.17843051673844,
            -69.66290675336495,
            -66.75505574094132,
            -66.11711432924494,
            -65.22260082419962,
            -63.79833212122321,
            -62.77678767219186,
            -61.14301504567266,
            -58.96090078749694,
            -56.70673635904677,
            -54.35695129563101,
            -53.70904545998201,
            -52.24025153438561,
            -51.55476901563816,
            -50.31088585383259,
            -48.74381920672022,
            -47.43474346469156,
            -45.52758764475584,
            -44.21581616043113,
            -42.2137018176727,
            -40.15343802166171,
            -38.79526775563136,
            -37.12939360411838,
            -35.00607272144407,
            -33.25027137179859,
            -31.59356492687948,
            -30.77386281802319,
            -29.10068360506557,
            -28.35240593412891,
            -26.9370630121557,
            -25.80994623713195,
            -24.62014526827261,
            -23.9117525779875,
            -21.96922287112102,
            -20.64338514173869,
            -20.35195393546019,
            -19.82268804567866,
            -18.64065598056186,
            -15.29438122815918,
            -11.82147298095515,
            -9.490776392340194,
            -7.093621206877287,
            -6.542135452036746,
            -7.622442808496999,
            -6.394711363100214,
            -4.977268417860614,
            -4.696924406744074,
            -3.610089606809197,
            -1.0249990509692,
            0.7599307991768001,
            2.056164703390095,
            2.61464401773992,
            3.144118409181829,
            2.443450739519903,
            3.927605575881898,
            3.643061290858896,
            2.558408368713572,
            3.401897629373707,
            4.747203092847485,
            6.452960406022612,
            9.36379365157336,
            11.07655316445744,
            12.16021246364107,
            13.45770215266384,
            14.5752273965627,
            16.27970232220832,
            16.63500734139234,
            16.2076157721458,
            17.25933907437138,
            18.64733712864108,
            18.7233690667199,
            18.52539571700618,
            18.76393980637658,
            19.4693111552624,
            20.57222263829317,
            21.43168239854276,
            21.7123579204781,
            24.33853296679445,
            24.03857979516033,
            23.66231819905806,
            24.31105713185389,
            25.05468546587508,
            25.26251773815602,
            25.26390926504973,
            27.2279776254436,
            28.55197271856014,
            29.47295797639526,
            30.95047577517107,
            29.66189640574157,
            29.80962926812936,
            29.13497519330122,
            28.62544897652697,
            28.72962977562565,
            29.95434078911785,
            30.7276459352579,
            32.4003558489494,
            35.26669024722651,
            35.72147033992223,
            36.33496817201376,
            36.73598621389829,
            35.56102456059307,
            34.715274523478,
            35.14471973176114,
            35.37543670972809,
            35.46411608112976,
            35.45916842995211,
            35.09135058266111,
            34.34686732362024,
            34.18728374526836,
            34.76803249213845,
            35.41841579135507,
            36.18686605477706,
            37.75567893171683,
            38.99246439686976,
            39.91390622104518,
            38.88553328579292,
            38.82825330947526,
            38.23249426204711,
            38.41570651275106,
            39.82647103839554,
            41.96246300125495,
            44.10157634993084,
            45.67486394080333,
            46.14727004081942,
            45.30027945293114,
            45.49529694486409,
            44.84407691052184,
            42.70014323992655,
            40.50276402267627,
            42.04861397738568,
            43.81113831186667,
            44.59486081032082,
            44.67319376999512,
            44.33354115462862,
            43.75575372250751,
            42.89723074180074,
            42.30103149893694,
            41.56515569775365,
            40.46635876875371,
            39.78760287282057,
            37.68793249037117,
            37.86952947848476,
            38.09738336713053,
            38.14828960457817,
            36.55788896139711,
            35.13278716127388,
            34.62122185737826,
            34.55447222222574,
            34.24694295972586,
            33.14817513455637,
            31.9093196594622,
            31.07973680016585,
            30.4109780699946,
            29.7288042929722,
            29.38932266260963,
            29.43779691122472,
            31.27474701614119,
            33.69865953573026,
            34.56190097494982,
            35.28003071551211,
            35.4126859747339,
            34.9157999153249,
            33.94944724277593,
            31.6991499857977,
            29.85835999425035,
            29.01629522966687,
            28.36239400494378,
            28.96264413720928,
            29.61560494441073,
            29.38160469057038,
            28.22757960529998,
            25.72269295342267,
            23.53222225792706,
            22.0832007471472,
            21.1849037441425,
            21.01410791510716,
            16.92168916633818,
            14.28542327630566,
            12.05367425427539,
            11.18083127948921,
            10.54858148563653,
            9.741916983330157,
            9.237979611498304,
            8.665587301948108,
            7.891390851000324,
            8.072570381045807,
            8.672102012496907,
            6.86649082126678,
            5.656862413161434,
            4.113116574444575,
            3.405602228667703,
            2.792071654766914,
            1.056526912179834,
            0.1613952207435432,
            -0.5495402888300305,
            -0.7641048114237492,
            -0.8080040174718306,
            -1.537958496555802,
            -2.706301529542543,
            -3.212172714484041,
            -5.934871296631172,
            -7.758026185911149,
            -10.25102665153099,
            -11.84934080811217,
            -12.06762408401119,
            -12.92449815082364,
            -12.88476323679788,
            -12.83652545680525,
            -13.42950054095127,
            -16.09145147085655,
            -18.2555759238312,
            -19.60296867764555,
            -22.90534212079365,
            -24.56570473441388,
            -25.64744681876618,
            -26.58729135873728,
            -28.06914562825114,
            -29.60536949103698,
            -31.17127198493108,
            -32.95757051091641,
            -34.19240238144994,
            -35.89829793781973,
            -37.33969788299873,
            -38.59954449580982,
            -40.1251163566485,
            -41.52827750658616,
            -42.80603752704337,
            -44.51601853361353,
            -47.67809878103435,
            -47.99576345249079,
            -49.1014652652666,
            -49.46644548908807,
            -51.11771679366939,
            -53.41345968190581,
            -56.00240911007859,
            -57.81411164207384,
            -59.78620174573734,
            -61.33972783572972,
            -63.97829565685242,
            -65.48938108608127,
            -66.86076812911779,
            -68.35968815721571,
            -69.78291639825329,
            -71.44071423681453,
            -73.98983871098608,
            -74.95599129470065,
            -75.95423085149378,
            -78.49800022086129,
            -78.1818016548641,
            -80.62730194069445,
            -52.32754847384058,
            -37.88562025874853,
            -41.33774564252235,
            -41.53057670919225,
            -42.24702206556685,
            -41.03330502402969,
            -39.93914288002998,
            -41.19996447116137,
            -42.86072362447158,
            -45.47465141513385,
            -45.62720641843043,
            -46.52461939258501,
            -46.9875885755755,
            -49.69911242369562,
            -52.93543290463276,
            -56.06871854979545,
            -73.10893852263689,
            -74.87411494366825,
            -76.34737994521856,
            -80.95281373243779,
            -82.44819036917761
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2250
          ],
          "y": [
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875
          ],
          "value": [
            -85.50316852051765,
            -85.79005225328729,
            -84.87499144393951,
            -83.49541894858703,
            -82.24109478760511,
            -82.43721094913781,
            -79.0435733506456,
            -78.72125570429489,
            -78.5551019362174,
            -76.35089423274621,
            -75.01611253246665,
            -73.48144572461024,
            -71.16699271136895,
            -69.64453496038914,
            -45.55055420496501,
            -42.91481673135422,
            -40.26892565889284,
            -38.65959661197849,
            -37.03408219735138,
            -47.06066829385236,
            -67.59272218914703,
            -73.3001361368224,
            -78.08247755747288,
            -76.87191828154027,
            -73.57132562901825,
            -72.68992339959368,
            -71.55031926231459,
            -68.8893924234435,
            -67.85608275095001,
            -65.42824121424928,
            -63.48473107209429,
            -62.21821968210861,
            -59.68460027361289,
            -57.71074938820675,
            -55.29262489289977,
            -53.05804734234698,
            -52.92579953675158,
            -51.87200804357417,
            -51.38236883794889,
            -48.64288712269627,
            -47.37891140393913,
            -45.49257209873758,
            -41.44076228840277,
            -38.04373045568354,
            -36.00494528654963,
            -33.70231934241019,
            -33.12503031338565,
            -32.2254745697137,
            -32.27495835744776,
            -31.79443956469186,
            -30.18103234353475,
            -27.99769026751164,
            -26.29978735058103,
            -23.66449552937411,
            -21.52817978640087,
            -21.29781933035702,
            -20.04009911615867,
            -19.33614476001821,
            -18.863571312977,
            -18.93181797640864,
            -17.53465039655566,
            -15.4467998072505,
            -14.10210188623751,
            -12.55715687875636,
            -10.14579811453586,
            -8.794916539045516,
            -7.361927146121161,
            -6.692403985653073,
            -5.846412022947334,
            -4.662293576984666,
            -3.578403266146779,
            -2.420210194031824,
            -1.346523163192614,
            -0.2733511621499929,
            0.3341291403557989,
            0.1708633305952389,
            0.808807953944779,
            1.791490831237752,
            2.833017560988083,
            3.962328719353536,
            5.558074917644262,
            8.087933565548155,
            9.912596397043671,
            11.49456420534989,
            11.38615425588796,
            12.6609029393876,
            12.91161970584653,
            14.42499979020795,
            15.48123691463843,
            16.89900454948656,
            18.60837983258534,
            18.95140667329542,
            19.4977801584173,
            20.66298293357249,
            21.48276871594135,
            22.68255593662616,
            23.2933434745064,
            24.60386531311087,
            24.95113403711002,
            25.76855695224367,
            27.07969542825595,
            28.09552279359195,
            28.01749542413745,
            27.41353819146752,
            28.71891047107056,
            30.62770338146947,
            31.37436578981578,
            32.79167867731303,
            33.92792859813198,
            34.52149030636065,
            34.842702007154,
            35.53996430127881,
            36.09574559959583,
            36.38034468167461,
            37.01924288179725,
            37.2037902707234,
            37.19747110153548,
            37.97846511588432,
            38.71232183882967,
            38.9356973755639,
            38.0404235329479,
            37.24875205080025,
            38.11120041063987,
            39.46742799598724,
            40.42655200464651,
            41.08985740458593,
            41.59492891631089,
            41.68699160800315,
            41.9606949435547,
            43.17420462029986,
            42.88963828003034,
            42.94916288927197,
            43.05648690205999,
            42.23626092425548,
            42.41929855197668,
            42.54590021446347,
            42.87838601158001,
            43.9633076894097,
            43.60636376077309,
            44.16030424181372,
            44.02788545121439,
            43.91507536638528,
            44.97769623412751,
            46.32158743334003,
            46.83814404415898,
            47.21074583358131,
            48.19812602363527,
            48.88562034466304,
            48.21341281058267,
            46.85038220486604,
            47.58432260132395,
            46.75952732213773,
            46.22063352144323,
            46.23652785085142,
            45.92640834744088,
            46.11356416717172,
            46.47292735171504,
            46.93302980740555,
            47.02756632468663,
            47.04147067968734,
            46.75787567975931,
            46.64858352043666,
            46.17693775799125,
            46.26215377356857,
            46.76543176174164,
            46.58932812162675,
            46.41023042495362,
            46.11893382389098,
            46.14626232068986,
            46.04630521498621,
            46.87999171437696,
            47.45857586385682,
            47.7204448543489,
            47.3115396744106,
            46.87895489041694,
            46.68013571063057,
            45.77350773615763,
            44.88800186663866,
            43.99459066917188,
            43.21758751757443,
            43.05244874558412,
            42.13019929011352,
            41.11035013920628,
            41.34724440518767,
            40.13484794995748,
            39.9542368541006,
            39.91721314378083,
            39.85949297202751,
            38.74381218338385,
            38.05142114288174,
            36.97722058859654,
            36.12138971220702,
            35.78104951884598,
            35.27976514305919,
            35.52229100023396,
            34.4966356351506,
            33.4654250764288,
            33.07968290755525,
            32.75297785876319,
            33.07715815026313,
            32.43797254981473,
            30.2349217236042,
            29.33850373665337,
            28.07097007462289,
            27.08853753574658,
            25.85775655461475,
            24.87380152160767,
            24.3093181779841,
            23.39356251468416,
            22.75268525409047,
            21.98466245317832,
            20.21033833443653,
            19.98778316192329,
            19.38328750838991,
            18.59177973528858,
            18.07221087801736,
            16.75080784480087,
            16.09579885553103,
            14.8076678669895,
            13.53246625512838,
            11.40773474617163,
            10.37369656842202,
            9.73658370639896,
            8.713429451745469,
            7.856657248339616,
            7.124782314349432,
            6.842157745268196,
            6.852668320789235,
            5.498503014678136,
            4.032892775285291,
            2.029519237112254,
            0.1180568887093614,
            -0.4650333664812933,
            -3.115202389381011,
            -3.910338364221388,
            -5.367915946408175,
            -6.523846877826145,
            -8.104076187009923,
            -9.455583494855091,
            -10.690045201045,
            -12.18621946463827,
            -13.41618644801201,
            -14.4913037729566,
            -16.42766255827155,
            -17.51040144881699,
            -18.78514194686431,
            -19.77820465981495,
            -21.03069346048869,
            -22.41285983473063,
            -24.01789970463142,
            -25.11874299671035,
            -26.57357799762394,
            -27.65441604424268,
            -28.41234527295455,
            -30.18557981704362,
            -31.1892872559838,
            -31.35840233881027,
            -32.49687506468035,
            -34.46980190346949,
            -36.68702265713364,
            -37.30267417267896,
            -37.28908632183447,
            -38.49588028970174,
            -40.18468098365702,
            -43.47597860032693,
            -45.23405732470565,
            -46.38049722416326,
            -48.05866774404421,
            -50.80027403892018,
            -52.46004366199486,
            -54.18052387540229,
            -55.35418677027337,
            -56.19633520836942,
            -56.97756205336191,
            -57.93555101263337,
            -60.28821735526435,
            -73.19325231947005,
            -76.99670095462352,
            -72.98205309780315,
            -69.93906572461128,
            -66.54963362962008,
            -66.56853656750172,
            -68.34011583123356,
            -69.18630970176309,
            -74.12391278194264,
            -73.97251465590671,
            -79.42346564959735
          ]
        },
        {
          "x": [
            62.5,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2296.875,
            2304.6875,
            2312.5
          ],
          "y": [
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25
          ],
          "value": [
            -81.62864105543122,
            -84.84451245749369,
            -82.52570114564151,
            -67.74517532903701,
            -66.46806286880746,
            -62.22030788194388,
            -69.62497718632221,
            -76.49687177035958,
            -80.8796685305424,
            -83.42062210431322,
            -81.82418969227001,
            -76.59841503482312,
            -75.31237497460097,
            -74.05372889479622,
            -71.9366071280092,
            -70.12305286480114,
            -68.68795026093721,
            -66.82499952148646,
            -65.26480865431949,
            -64.05028398148715,
            -62.55754851736128,
            -60.81809624447487,
            -59.10249092266895,
            -57.22525747842155,
            -55.5143051315099,
            -53.92334060161375,
            -52.58414603304118,
            -50.71536725154147,
            -48.42707858188078,
            -46.35834920918569,
            -43.74428681330755,
            -42.39132613292895,
            -42.15915032546036,
            -41.11741873202845,
            -39.54054773203097,
            -38.3687911380548,
            -36.83175964397378,
            -34.4106592820026,
            -33.34878783789463,
            -32.21867518732324,
            -25.83689456514549,
            -27.23944453464355,
            -25.37215368647594,
            -24.48650411679409,
            -22.51071236969437,
            -21.0301823244663,
            -19.86538518394809,
            -18.8460799108725,
            -18.1531322596129,
            -16.88671909505501,
            -15.38898868602701,
            -13.64920262858504,
            -12.15858992509311,
            -11.33055684476858,
            -9.852706170931924,
            -8.584109309595078,
            -7.410511443595169,
            -6.580183708138065,
            -5.209022674534936,
            -3.96520363210584,
            -2.622442707433947,
            -1.656647214076656,
            -0.006970811483597572,
            1.017694103211397,
            1.665259105720907,
            2.526713842598838,
            3.720758968484006,
            4.884359441348352,
            6.482833214249695,
            8.64657704369165,
            9.314626367995515,
            9.956512258213479,
            10.45327371684834,
            12.23723393195542,
            13.01285192312207,
            14.0750107675558,
            14.84781387262046,
            15.96119182067923,
            16.99117638054304,
            18.2354160642717,
            18.94431261462159,
            20.37300509982742,
            21.9598259718623,
            22.82543573528528,
            24.01875099167228,
            24.98252251825761,
            25.20812086004298,
            26.26602326927241,
            26.68419256224297,
            28.45471499313135,
            29.38547004305292,
            30.48664802918211,
            30.91140388278291,
            31.32369602099061,
            32.50584632041864,
            33.44473952893168,
            33.47743404447101,
            33.85139279998839,
            34.91716415737756,
            35.40824764058925,
            35.3604591509793,
            35.70266926544718,
            35.67280509741977,
            36.22861913754605,
            36.84324474306777,
            37.59199898922816,
            37.93419091380201,
            38.58790296362713,
            39.03358083334751,
            39.91607445641421,
            41.26577186980285,
            41.58854790148325,
            42.54201849107631,
            43.05670518078841,
            43.56748831924051,
            43.92283517518081,
            44.23266727826558,
            44.57976319827139,
            45.09554491960444,
            45.51905658445321,
            44.82442818698473,
            44.93838787311688,
            45.51353777060285,
            46.7324243800249,
            45.70716919261031,
            45.6080560979899,
            45.85286296787672,
            45.87426519719884,
            46.14542922354303,
            46.29316754289903,
            46.45574517780915,
            46.31056435755454,
            46.59698606701568,
            46.66441236622632,
            47.12191730504856,
            47.60483716381714,
            47.78701986651868,
            48.05032222066075,
            48.33558705286123,
            48.67316602030769,
            48.29200042877346,
            48.58018291997723,
            48.52839992963709,
            48.57021849602461,
            48.27614611713216,
            48.285710363416,
            48.38335007661954,
            48.40501424041577,
            48.48979733651504,
            48.43525312026031,
            48.55108272749931,
            48.95703023066744,
            49.25314351567067,
            47.7615867566783,
            47.92576146428473,
            48.6920980620198,
            47.77956928592175,
            46.73005969380029,
            46.79328412748873,
            46.94869858212769,
            46.74255615100265,
            47.06846448243596,
            47.44655598187819,
            46.37433812604286,
            45.76295759761706,
            44.6944723080378,
            44.85412137000822,
            44.66835525818169,
            44.03564889798872,
            43.8912829849869,
            44.02972263051197,
            44.12933776620775,
            43.59017839306034,
            43.01652734284289,
            42.14647560729645,
            41.85143916402012,
            41.3332054449711,
            40.89436333742924,
            40.13242505607195,
            39.10485247615725,
            38.13828880083747,
            37.1793721569702,
            36.62848757812753,
            35.88209801819175,
            35.07091605570167,
            34.57136335782707,
            34.46363189141266,
            33.77101893420331,
            33.20972246001475,
            32.48882785555907,
            31.75148231093772,
            30.61098686885089,
            30.07188752235379,
            29.45601227111183,
            29.0254447463667,
            27.77095505734906,
            27.81158946163487,
            27.871368729393,
            27.31623681029305,
            25.92988676042296,
            24.45612517476548,
            23.46743167436216,
            24.39835589029826,
            23.56776531087235,
            22.46005351480562,
            19.1575145436218,
            17.55474659148604,
            16.47468889132142,
            14.34379282727605,
            14.03632359142648,
            13.14761084358906,
            12.6735221783747,
            12.41650352312718,
            12.32311296917032,
            10.90471869247267,
            8.977797733678017,
            8.567758413846605,
            7.120197096810443,
            5.871047505934257,
            4.345793058746494,
            3.236078782720142,
            1.954374738488696,
            0.4714921146842244,
            -0.6032428814251034,
            -1.776299541234039,
            -2.788023266475648,
            -4.100482783542247,
            -6.124292212916771,
            -8.259072274086066,
            -9.02387091628043,
            -10.58326779457275,
            -11.49673153122421,
            -12.67120023840107,
            -13.31467501586303,
            -15.42532118037343,
            -16.1550833581714,
            -17.14954123599455,
            -18.50474836828653,
            -20.50660441454966,
            -21.99607115471736,
            -23.19842496945057,
            -24.57625123497564,
            -26.10677256598137,
            -27.73062988126185,
            -29.6503167191986,
            -30.48257349291816,
            -31.2306874548085,
            -33.62141796969809,
            -35.72020432329737,
            -37.51218537217937,
            -38.41494253720157,
            -39.40592068829574,
            -41.87651938991621,
            -43.1919215770904,
            -45.73160913423635,
            -47.51877713715658,
            -48.93442746833898,
            -50.85661541670561,
            -52.54155257716775,
            -54.14295446826145,
            -55.77988486038521,
            -57.3451179661788,
            -59.2088108533062,
            -60.27031486155465,
            -68.08120815549046,
            -66.55188917648047,
            -59.51463754172437,
            -34.20404391363263,
            -31.29105971311219,
            -27.80284921755083,
            -27.17312418099027,
            -29.86527033499442,
            -33.75005326233804,
            -62.50922888284549,
            -63.21662658592686,
            -65.36989531014115,
            -68.23978765169159,
            -70.83435775712132,
            -72.67856562975794,
            -75.44415711890906,
            -76.58237154828385,
            -78.18420272087678,
            -79.79409565450624,
            -81.54899114742875
          ]
        },
        {
          "x": [
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2296.875,
            2304.6875,
            2320.3125,
            2328.125,
            2335.9375,
            2343.75,
            2351.5625,
            2359.375
          ],
          "y": [
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125,
            507.8125
          ],
          "value": [
            -88.04028038866818,
            -85.08876635460183,
            -83.8600390125066,
            -82.32226537074894,
            -80.13684418983757,
            -78.53548595448956,
            -76.91916835028678,
            -75.64987754449248,
            -73.79543239949271,
            -71.75927748903632,
            -70.85861579980701,
            -68.47955228295177,
            -68.26317257946357,
            -67.28438893333077,
            -65.90154225705191,
            -45.26587144937366,
            -44.00575926410966,
            -43.04681351641193,
            -46.5189223177731,
            -51.35824176250026,
            -62.18774797162041,
            -70.82486263243482,
            -69.69219975871965,
            -69.24988701939583,
            -66.30103598581627,
            -66.38289778493345,
            -64.77569695562124,
            -61.6425386397168,
            -60.14073005644605,
            -58.27915083500557,
            -56.06897320831195,
            -54.71109034260735,
            -52.76184674585238,
            -51.11525751999579,
            -50.1171343785245,
            -48.65631126449443,
            -46.38787504518405,
            -44.83315933612175,
            -42.82036024960689,
            -41.02645834791474,
            -39.83762144343928,
            -38.36749965557829,
            -36.49514110293239,
            -35.21673716022633,
            -33.48591781104915,
            -30.23435056093149,
            -29.17898564192001,
            -28.28589276759885,
            -26.17401150928345,
            -24.05570376140531,
            -22.05408418376464,
            -20.01272514462471,
            -18.29985922086053,
            -16.69352604949381,
            -14.67564106860664,
            -14.37822720617987,
            -13.44019256066531,
            -13.31688599748304,
            -11.90992134070257,
            -10.66346430889098,
            -9.534770470054355,
            -8.161264304362703,
            -7.125426691345638,
            -6.463480076490669,
            -5.388708814280108,
            -3.818102868535789,
            -3.070898401347222,
            -1.867539140221197,
            -0.8643850151202059,
            0.06378918016025636,
            1.654044012866507,
            2.271512130391784,
            3.046887286473066,
            4.337151494837599,
            5.418248747446341,
            6.28824864179478,
            7.387830009975005,
            8.624710062576924,
            10.22751257551135,
            10.93636910809437,
            11.81448351417203,
            12.85761572944466,
            13.79101740894839,
            14.71468567615375,
            15.44322549307253,
            15.97561458765995,
            17.13249730528332,
            17.93975752661936,
            18.33761234593112,
            17.3437874764204,
            16.75655585131608,
            17.30111944198143,
            17.35335354169365,
            17.83924562914763,
            21.14038943545893,
            22.49120370834135,
            23.24500565009657,
            23.41198887734208,
            26.10602859931532,
            27.42332981142681,
            28.87802293116692,
            29.89923450513743,
            30.49378210562281,
            31.01737456745468,
            31.48151154164225,
            32.11758667021058,
            32.39869693061337,
            32.67174542997964,
            33.24690624140203,
            33.9677462761756,
            34.57179627730511,
            34.85654087853618,
            34.96369754429907,
            35.88899926398881,
            36.50047437986359,
            37.93905125348829,
            38.31387584796175,
            37.70966941374354,
            37.95844168053009,
            38.34144445136189,
            39.00729643646628,
            39.59324021707289,
            40.32083234051242,
            41.03159153601155,
            40.95591430086643,
            41.64872007095255,
            42.08872996969149,
            41.94231951260008,
            41.82461634627543,
            42.5065663876012,
            42.8342646046076,
            42.81563451513648,
            43.26232010498643,
            43.0470026913099,
            43.74172931420617,
            43.98088276502676,
            44.04914943734184,
            44.45559170562774,
            44.35621303855442,
            44.65303936740384,
            44.98681664699689,
            45.01989315031096,
            45.12909436016344,
            45.20988659351133,
            45.3773645858746,
            45.17328852671199,
            45.28863064479083,
            45.15612818067893,
            45.57053034659475,
            45.70843157125637,
            45.45072806649841,
            45.76603896566667,
            45.56134445010684,
            45.27788405539468,
            45.12758096097969,
            44.97767440625466,
            44.9809231213294,
            44.98495400184765,
            44.8076898464933,
            44.46133607416414,
            44.11188638187014,
            44.25007500685751,
            43.82579209050164,
            44.17762829689309,
            43.62418985692784,
            43.63692278275266,
            43.20675361668691,
            43.03457171772607,
            42.96021870686673,
            42.69900819053873,
            42.51679638400674,
            42.22728966851719,
            42.04160723020323,
            41.61378092248924,
            41.13653631065972,
            41.0695793107152,
            40.54874807479791,
            39.71777186961845,
            39.45390926674008,
            38.59490607283078,
            38.69436113745905,
            38.8611588277854,
            38.7041836802382,
            38.04613152169622,
            37.27098373929039,
            36.63592724478804,
            35.83853322197683,
            35.97605609684251,
            35.85450758691877,
            35.28088927851059,
            34.87922003841959,
            34.38373460085131,
            33.72886567376554,
            33.03556513856165,
            32.57920616306365,
            32.21303995815106,
            32.0635772368405,
            31.3949458359275,
            30.25815021828748,
            29.53990042442456,
            29.00517029047478,
            28.36813473550137,
            28.14608342305291,
            27.37887552939355,
            26.12355638120789,
            25.07190947653726,
            24.09661101410165,
            23.5886691370979,
            22.39871173514985,
            21.43110941688064,
            20.43581844191067,
            19.76502426259685,
            18.41399534896482,
            17.72593532223254,
            17.54166441969573,
            16.51683851378039,
            15.02194754721131,
            14.41916447220137,
            13.26951951341471,
            12.2590781757026,
            11.35394177254057,
            10.95935022021877,
            9.693949323263951,
            8.802012416708749,
            6.932287760719191,
            6.207953447301406,
            5.015403075958602,
            3.435975486354437,
            1.194399715132022,
            -0.3591401878111355,
            -1.3315105888978,
            -2.224295485575567,
            -2.670044068509014,
            -3.153775651298929,
            -4.329521743784426,
            -2.934069698312669,
            -3.466148882580455,
            -6.87604824634036,
            -8.044625246839132,
            -10.31550527841318,
            -11.79430728370789,
            -12.88421481149271,
            -14.07257332175504,
            -16.33690953894984,
            -17.39541585266124,
            -18.32953785196878,
            -19.03537668113131,
            -20.55217555607669,
            -22.07433863077313,
            -23.03937617398333,
            -23.58116034884006,
            -25.78627754701301,
            -26.89754364837427,
            -29.37553472293075,
            -31.71206844854169,
            -32.90515815024264,
            -33.7395176757127,
            -35.01562605379149,
            -36.9757144653704,
            -38.84791658492759,
            -40.12211866211146,
            -41.78349627181888,
            -43.71731120045297,
            -45.44761031866074,
            -47.95622953679413,
            -49.08641494694166,
            -51.23769733472727,
            -52.3452072229702,
            -54.63260458782315,
            -56.64766649715602,
            -58.90191823709756,
            -58.77319563296624,
            -52.95207665767521,
            -64.82470053015277,
            -66.95371848763898,
            -68.64943134132773,
            -77.49871292617172,
            -77.24695024080575,
            -76.08869054820389,
            -63.80784179782495,
            -52.55551877780817,
            -33.85415402590297,
            -28.40997694875114,
            -19.27003359014634,
            -12.0659879030427,
            -5.919357590755681,
            -2.544540393500938,
            -1.309826643591805,
            -0.7399214609904448,
            0.4908841333417513,
            -0.7273184792211396,
            -2.630038807183155,
            -4.202725449431455,
            -8.737200914765708,
            -62.41170922294259,
            -64.29184577427804,
            -65.84498623851687,
            -67.13131733704358,
            -69.08811337780207,
            -70.27450192254037
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2179.6875,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125
          ],
          "y": [
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875
          ],
          "value": [
            -61.07111403252929,
            -58.00941289635375,
            -52.89888940751553,
            -48.73974103247747,
            -47.42247620015405,
            -42.84850729163736,
            -37.12681063916534,
            -37.36524013220333,
            -41.52702967985533,
            -45.72832403937355,
            -49.16001489618793,
            -55.43607039726339,
            -55.68202323047444,
            -30.41228956135456,
            -23.4928465943085,
            -25.52727528382093,
            -25.87255949038081,
            -25.86754271760583,
            -27.20916199905332,
            -32.81942190369591,
            -48.66268136538565,
            -60.67357026040554,
            -67.15852941852063,
            -67.74823123123497,
            -68.0660959915258,
            -67.18583608744666,
            -64.54774847952649,
            -63.12832556432113,
            -61.27088272478431,
            -59.6034515183419,
            -57.61015927419066,
            -55.09774200618267,
            -53.73924068408087,
            -52.64487117528915,
            -50.93152140034363,
            -49.67790664522909,
            -47.52257518703118,
            -46.46608795155771,
            -44.74446177482605,
            -42.67320400686003,
            -40.64357563038357,
            -39.12736428901553,
            -37.43936395039782,
            -36.84923649416305,
            -35.98899274948053,
            -34.69402872724459,
            -32.3708554788027,
            -29.35353222710546,
            -26.63575469341595,
            -23.68285095144529,
            -23.15028905286454,
            -23.24143315490801,
            -23.24741581105627,
            -23.19835402886383,
            -22.13327570643742,
            -20.62289968307596,
            -18.94562228699215,
            -17.69939990481362,
            -15.65116326673888,
            -14.38628532923758,
            -12.43567385245115,
            -12.6094510051189,
            -12.06542947329581,
            -10.64723073795903,
            -9.066597158380318,
            -7.896434908616357,
            -4.97155679113348,
            -3.771758429138572,
            -0.3170985678480065,
            -1.444879330847471,
            -1.462705085941707,
            2.275646465932368,
            2.402442987659015,
            2.74338935923879,
            4.15241902373964,
            0.2658450739545515,
            1.044488271872979,
            2.911222509283107,
            3.120002247669618,
            3.919794380635722,
            4.658291800296865,
            5.87948761676671,
            7.384825039480347,
            8.614519174443558,
            9.33736464503454,
            11.02657734008972,
            10.86144038708881,
            11.79929040517891,
            12.92873912461801,
            13.23536616837373,
            14.01117970090127,
            15.44744191050995,
            17.21057014947291,
            16.00585346750449,
            16.26209996175021,
            16.43458926992025,
            18.03577833925374,
            18.72414759418461,
            19.5630345842801,
            19.85757990041748,
            20.54647120530717,
            22.22850343969185,
            22.1312657231465,
            22.41708352812566,
            23.84554500167724,
            26.13579272292554,
            27.76027395157143,
            28.58981861209031,
            28.77647239074577,
            28.58238985936623,
            28.24017974489834,
            28.66303657356184,
            28.07990313158371,
            27.23016405070666,
            27.82367300824262,
            28.08446879498661,
            28.58265179384034,
            29.00077561207581,
            30.25324440386612,
            31.78583938279189,
            31.37681051157415,
            31.04740608250722,
            31.92891381331719,
            31.46265225950629,
            31.06949225184508,
            30.74257256230339,
            30.84760464844294,
            30.86715878453106,
            31.05479845544323,
            31.71707794535905,
            31.76400059601292,
            31.99208003934473,
            31.80536805302836,
            31.66958049405366,
            31.96141551597975,
            31.97820478817448,
            32.5544060615357,
            32.53712930018082,
            32.47602944611572,
            32.54715556977317,
            33.98989065317437,
            34.62187305558473,
            34.45609399932437,
            33.46674202475697,
            32.76368443039246,
            32.45174593757838,
            32.09000715287402,
            32.36805787310004,
            32.34656469430774,
            32.0840954373125,
            32.33683673897758,
            32.03521919203922,
            32.53411341574974,
            34.12765363464132,
            34.70390947768465,
            34.17965126573108,
            33.30179970362224,
            32.24927058909088,
            31.68730472680181,
            31.90790448570624,
            32.53601607866585,
            32.44625622755848,
            30.156945285853,
            29.00605795730371,
            28.54329432011582,
            28.35524537658785,
            28.08427234413102,
            28.92558950406965,
            28.11255762935616,
            27.05901897570584,
            25.7978135778103,
            26.15406083350535,
            26.53186311363243,
            26.83360980881844,
            24.79163049429189,
            23.63372004765552,
            22.86073504365049,
            22.70419827254955,
            22.71882112836465,
            22.39765126432758,
            21.93969157815445,
            22.55134859296959,
            24.30934910080396,
            23.75253461650573,
            23.41858271392994,
            18.45191582106054,
            16.94704224064481,
            16.24248034204356,
            15.70789208926726,
            14.65116474719252,
            13.9205531013431,
            13.17319856752874,
            12.16654254676541,
            11.53294942923822,
            11.08519518311368,
            9.923690413415898,
            9.061097443918698,
            8.424749466939829,
            7.685224773013033,
            6.79746835885453,
            6.16751140114502,
            5.345995759853395,
            4.706101208284963,
            3.671310651043314,
            2.955920763270115,
            3.103796643699752,
            3.010586169693852,
            2.156601567548933,
            0.3347580843637843,
            -1.58157797613967,
            -2.743982349784346,
            -3.999435648438521,
            -4.867203188041458,
            -6.238199603103567,
            -6.99007568982779,
            -7.524179181928048,
            -8.213965884351637,
            -8.642305147077423,
            -9.837349352892488,
            -10.80750007531606,
            -12.05577063956298,
            -13.31678231508704,
            -14.1151313073351,
            -15.7745998876635,
            -17.34606121317483,
            -18.51344131864607,
            -19.15018401632551,
            -20.96348362101708,
            -22.26875767519232,
            -24.19270640530158,
            -25.65813883848023,
            -26.13933065731544,
            -27.70943865471054,
            -28.88653034460731,
            -28.80102147173602,
            -30.36626185348723,
            -32.24038664484397,
            -34.10439967410639,
            -35.63601057976484,
            -36.66904012789018,
            -38.56499824905768,
            -40.47828406328335,
            -42.47325705364347,
            -43.81628968985751,
            -45.38991197478026,
            -46.92512811743654,
            -48.52241545449942,
            -50.37760274717584,
            -51.25005918671377,
            -53.09241532813758,
            -54.53196718008257,
            -56.46061254083179,
            -58.26597043778747,
            -59.43846917944029,
            -60.08109994581901,
            -62.97138315858319,
            -64.29446511901915,
            -66.18320185225457,
            -28.48200347216334,
            -28.38639738911297,
            -27.1316912403563,
            -27.19734220590908,
            -26.89299799385481,
            -25.71127697592601,
            -26.19285987748299,
            -25.31874815758783,
            -25.75834150775336,
            -25.68073796282988,
            -25.75048165454064,
            -26.64139719854575,
            -28.23033173626754,
            -27.62405347311869,
            -28.60543463611975,
            -30.51835301448591,
            -33.66987584740855,
            -36.2898463208694,
            -40.96519478480332,
            -57.30149860028177,
            -78.93033034633845,
            -72.83088780241087,
            -66.29733252339065,
            -64.06682223314419,
            -59.09576066187583,
            -56.78800152963959
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2304.6875,
            2312.5,
            2320.3125,
            2328.125,
            2335.9375
          ],
          "y": [
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25
          ],
          "value": [
            -97.07352728582919,
            -91.88485273625702,
            -92.62200183002278,
            -93.56864029541612,
            -92.68149005947635,
            -90.10042413137853,
            -88.28091085888445,
            -86.46614151075482,
            -85.32311039743945,
            -86.02619345765561,
            -86.45097841508687,
            -89.23892892198637,
            -88.34604523144662,
            -85.57468390790746,
            -84.3359885038808,
            -81.23098814394325,
            -79.0088452049531,
            -77.82343163853511,
            -63.90606722561643,
            -58.51811147294939,
            -55.87157284026034,
            -53.13544534146786,
            -53.37366019375622,
            -60.2574109507259,
            -74.95728641515598,
            -79.44789831526577,
            -84.49423330603167,
            -83.86754780076444,
            -82.88054959848523,
            -81.426311226096,
            -79.21209908090532,
            -77.47441850369796,
            -74.98254126403481,
            -73.43286415562034,
            -71.90650649135932,
            -70.14667062321678,
            -67.6186173222959,
            -65.51541446242481,
            -63.87521716533229,
            -63.20101238088682,
            -61.41327321529388,
            -57.74122837465256,
            -55.47370165004395,
            -54.26920688478276,
            -54.95472942129709,
            -52.78251046547666,
            -51.91907257540151,
            -49.84053521184251,
            -46.00473403115757,
            -46.13327109836973,
            -44.5312907686457,
            -43.68724330561236,
            -42.40298949298449,
            -41.09769724891521,
            -38.66983388434164,
            -38.46158142550848,
            -36.85436240630224,
            -35.53287024260499,
            -34.240962122567,
            -32.75089329690672,
            -31.50560587528162,
            -29.82563637488056,
            -27.9735049844021,
            -26.28323818498757,
            -25.45968345657457,
            -23.50137037865352,
            -23.25714012840763,
            -22.358266505762,
            -20.85274718410801,
            -19.27123412315268,
            -17.71649112924933,
            -16.38224603084382,
            -15.2330349010299,
            -14.03524402121548,
            -13.30062241322594,
            -12.2726223708014,
            -11.04768944060197,
            -9.70198743743822,
            -8.513708053214941,
            -7.564096449641511,
            -6.554535048053367,
            -5.231373052083654,
            -3.458231049080496,
            -2.06177151085285,
            0.4694810229466384,
            1.269782956114796,
            2.505077191017335,
            3.793195674006711,
            4.813710802409332,
            6.325011327135144,
            7.249772352224682,
            10.02624958346132,
            13.21902163908817,
            14.71777977712918,
            12.84183144889539,
            12.54359267477412,
            11.96443827211624,
            12.90243744733743,
            14.74136843171436,
            14.57015696360031,
            14.97853099863278,
            15.29928704258054,
            15.73759982420597,
            17.5797613337636,
            19.14693348226137,
            19.62403075594921,
            20.49741669907235,
            21.09273191308603,
            21.1074930120958,
            22.75067890877835,
            24.0791923715733,
            25.06656528566964,
            25.91198244772386,
            25.89157156762667,
            27.38445800787304,
            28.11031117744278,
            28.13645369315054,
            29.23569445556495,
            29.79017517645843,
            28.57290382962674,
            28.84373679989949,
            28.40489287336823,
            29.55878153443336,
            30.48532744287513,
            29.30583468696568,
            30.09830652445089,
            30.49676524824463,
            31.076018785825,
            30.58341826545075,
            31.55877129756846,
            31.96340549038723,
            31.31092307739891,
            31.75509118591435,
            32.14572643628344,
            32.32026938349009,
            32.36369957448915,
            32.29962021578103,
            32.51108137192205,
            33.13419074402191,
            33.52510248078033,
            34.10911085666157,
            34.26128751016222,
            34.59928120719269,
            33.94497980480082,
            34.46893970249221,
            34.71490708761849,
            34.48376810410991,
            34.55575642874464,
            34.80399755062535,
            34.64498513494618,
            34.60045627434738,
            34.20701250433922,
            34.2988787451759,
            34.4145591952838,
            34.70285446383059,
            34.70726733212359,
            35.12733746902086,
            36.08961560530588,
            36.88753349706531,
            38.43205558951013,
            38.61316145048477,
            37.57894955924712,
            36.33972301031463,
            35.82740100682713,
            36.26162651926279,
            36.74258914543316,
            37.05648850882426,
            38.38271732092835,
            38.30280184047297,
            37.9227421944961,
            38.38246993836947,
            36.76143023767509,
            34.47558628977276,
            33.27810190967284,
            32.10851718904451,
            31.64662120980211,
            31.32340498268604,
            30.93725899816491,
            30.88066296186298,
            30.92276529059745,
            30.06521728821099,
            29.51643182314001,
            28.99381615861785,
            28.7015427602455,
            28.69972558983136,
            28.49154225259554,
            28.20625559252221,
            28.29088225553278,
            28.46882853191346,
            26.28743277455214,
            25.47894109738991,
            24.91722261765972,
            24.31526809232309,
            23.96337185928132,
            23.9574601437198,
            24.85373261151835,
            27.63292468443979,
            27.48907900240738,
            25.97486309241503,
            24.96093657100573,
            23.92347050772514,
            22.45225186925381,
            21.46293263649568,
            20.75180600513704,
            18.98124537547119,
            17.77222678356338,
            17.36964622978121,
            16.38599496800452,
            16.80139030213468,
            16.68927507125773,
            16.11123479960952,
            14.00153905706247,
            12.97637754760217,
            12.49698016181355,
            11.721157534339,
            10.75845739251235,
            10.58116595231695,
            9.490313459536992,
            7.825402462913189,
            8.289187462651171,
            9.113317901210394,
            8.465430255455431,
            5.047037120675668,
            3.495231112538022,
            2.641892706378712,
            1.691884676802147,
            1.4180586731527,
            0.145881585922325,
            -0.8983514589999686,
            -1.987190216823365,
            -3.038814838873805,
            -4.650950359064154,
            -5.31093064637389,
            -6.43291150481673,
            -6.02051386522362,
            -9.275996490032412,
            -10.86937754735118,
            -11.37158687924966,
            -13.04187753703445,
            -15.06608168710954,
            -15.92560329299886,
            -16.57989741943311,
            -17.58600228640717,
            -18.44387406890746,
            -20.38475031440612,
            -22.41209949715994,
            -23.27794391021598,
            -24.60197174514178,
            -26.18051985336933,
            -27.58576738415286,
            -29.54383126052562,
            -31.57637183903717,
            -32.5763103319332,
            -34.43495734245516,
            -35.63262725947425,
            -36.74701292766258,
            -38.51308065350167,
            -40.07121606264263,
            -41.82818156550638,
            -42.79705535736866,
            -43.51348979980685,
            -44.93109008762985,
            -44.6961130364798,
            -44.95151006267406,
            -45.2838467026595,
            -47.36435221275315,
            -49.09573544864543,
            -50.32303306506947,
            -52.27110523264855,
            -53.19847696227953,
            -54.56158396555111,
            -59.90651698084548,
            -61.324484704528,
            -64.28567576222122,
            -65.52450940944254,
            -67.23963451804593,
            -68.06961755501106,
            -70.7693470758386,
            -71.91917393356562,
            -89.15626676753163,
            -90.1121020433493,
            -88.96784129319713,
            -85.53273801226169,
            -77.04157178523019,
            -66.61147926934063,
            -54.64139758259989,
            -44.77267066249624,
            -39.42112380173057,
            -38.0772034986876,
            -38.15482705249451,
            -39.4221096939873,
            -41.68570012552664,
            -49.07230686512776,
            -55.53052324103191,
            -85.62081347918138,
            -87.83132943790406,
            -90.57303395820782,
            -92.46376430382952,
            -94.79776053922251
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2359.375
          ],
          "y": [
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375,
            398.4375
          ],
          "value": [
            -61.91838474478573,
            -66.37469050474465,
            -69.29756636964157,
            -69.52861440367997,
            -68.46731412224472,
            -66.56366167590022,
            -64.40703145926818,
            -61.93366425577551,
            -59.45186785538681,
            -56.73513442161493,
            -56.0415028303396,
            -54.33177648228593,
            -51.59166903467849,
            -48.66892049903981,
            -30.34091423614882,
            -27.99062895064708,
            -26.25289744173642,
            -38.8027256121859,
            -50.59977047494613,
            -56.23163451673463,
            -58.62278339918703,
            -56.80751564796083,
            -54.14698534877971,
            -53.29420673660934,
            -52.41233520791866,
            -50.96528184367344,
            -49.92496178601868,
            -47.99615635420196,
            -45.58417640510015,
            -42.17197420075536,
            -41.50565655436367,
            -40.58930062456056,
            -38.98887734976597,
            -38.67212944896892,
            -37.36402140930295,
            -36.40363502199762,
            -34.88756919978186,
            -32.50886948080733,
            -31.86596586601809,
            -29.83812919410411,
            -27.7589206234552,
            -26.40038837853353,
            -24.95607805030886,
            -22.79903128510341,
            -21.0341841011541,
            -19.26692857523449,
            -18.87221333163325,
            -17.55193261487875,
            -16.86118412180804,
            -15.03017574577825,
            -13.92577632941538,
            -12.53718710358953,
            -11.93260595755419,
            -9.916943781718146,
            -8.355556929018348,
            -8.274200808955356,
            -7.390707651211414,
            -6.055926405679202,
            -3.278144049545517,
            0.4269387261501834,
            3.108601504209219,
            5.121179583511548,
            5.079359652881976,
            4.397472366690636,
            5.705053354176925,
            6.660142389591783,
            7.261197424668353,
            8.70439089339925,
            10.74850206350675,
            12.2373276099097,
            13.11296273343032,
            14.19327418261673,
            14.62050749978516,
            14.61294959881343,
            15.6244495883584,
            16.09924402146135,
            14.62115869799163,
            15.3119344759034,
            16.87370240688324,
            18.96017602120992,
            22.15264976257458,
            22.4972845899174,
            23.73244751652237,
            24.11346940789372,
            25.55316132202279,
            27.18666110013146,
            27.41850585152861,
            27.96978333208244,
            28.39182161551435,
            30.30759035027586,
            29.08776514232159,
            29.83871854667086,
            30.22071541636251,
            30.9115057461895,
            32.30449510738254,
            32.59397271904163,
            33.19803727208637,
            35.48961831256747,
            34.97270154184662,
            34.75401172181591,
            35.44656283338554,
            36.38358612079173,
            36.20606003096327,
            36.43020681920461,
            38.807702367194,
            39.67309021390975,
            41.0736829508096,
            40.6322578783147,
            40.70636714459397,
            40.37733015138656,
            39.69742101617157,
            39.05110497726128,
            39.288785046665,
            41.05960033484735,
            41.25560735701583,
            46.52726420317777,
            46.74895535572432,
            46.25521978596225,
            46.67396569857374,
            45.75244020088576,
            45.6115449196659,
            45.21395021583885,
            45.54389306576923,
            45.79071173793636,
            45.67388532450423,
            46.04824789566919,
            44.50032793101855,
            44.22722486197017,
            44.48073741514236,
            45.1118903583847,
            45.17914931057021,
            46.34401557268575,
            47.47525235870853,
            48.50504774367437,
            48.61206980422139,
            48.13490158994682,
            48.0296766909305,
            48.38536551687866,
            48.92010474577546,
            50.12937617721036,
            52.29963790043257,
            53.87399141909555,
            55.81177902058698,
            56.18368959403597,
            54.14423139882274,
            51.6932959726546,
            51.55528197064996,
            49.44470128975809,
            49.95173731003888,
            52.44144995231181,
            53.57989721233025,
            54.08579818322323,
            53.71014412958175,
            52.77941090753302,
            53.54166205506772,
            52.69810571917333,
            51.97256177780218,
            51.45840259501711,
            50.16730938223191,
            49.07021138933487,
            47.49958316097036,
            47.76216883328743,
            47.42858800454997,
            47.28150088340044,
            45.9801267425064,
            44.15240255184472,
            43.56009230832569,
            43.25517875258811,
            42.47498509357683,
            41.59122181590647,
            40.44630259159021,
            39.61825859732926,
            38.73935929732397,
            38.33879964076914,
            38.05490632657893,
            38.26144893537275,
            40.19457992399111,
            41.36917050345801,
            43.131185520906,
            43.72851617517881,
            43.29155490268022,
            42.7271515945904,
            39.98214015155099,
            36.79805013234727,
            36.19218477979302,
            36.38075213530101,
            36.10761268646456,
            37.08702206495218,
            33.56016532052308,
            32.52918395446613,
            32.18290294171311,
            28.81467116822023,
            28.37412284861784,
            29.00517392845359,
            28.50589226000011,
            25.16139102226589,
            23.12192373210564,
            21.90295526816044,
            19.85531343962066,
            18.75921225291677,
            17.6523481059121,
            17.19935789878946,
            16.29897269594949,
            15.8284638018813,
            15.23629907751456,
            15.13012284704018,
            15.84819256095216,
            14.19167165295221,
            12.92071010539075,
            11.1963681774796,
            10.56873588822782,
            9.045350452652201,
            8.395271834160667,
            7.414590982079972,
            6.61501280774246,
            6.356344783853274,
            5.684894858859479,
            5.080541995994281,
            4.400942998472601,
            1.883599225038779,
            0.2005350552281016,
            -1.608885099813051,
            -3.638622047219542,
            -5.331192369339988,
            -5.642536962113809,
            -6.067544290999649,
            -6.003567250445485,
            -6.041693723091157,
            -8.593442544224672,
            -10.74310512194643,
            -13.33313321083551,
            -15.0652913362137,
            -16.95045830274466,
            -18.31706867960747,
            -19.10852733999491,
            -21.4628907997394,
            -22.7493164857151,
            -24.05982377240434,
            -26.7739815171808,
            -27.81726834655274,
            -28.96471232816111,
            -31.31884295726195,
            -32.63596590841189,
            -34.07559779589064,
            -35.47536834958009,
            -37.08779695443809,
            -38.50257417070679,
            -40.82437590113841,
            -42.91766526876017,
            -42.77309562894516,
            -44.65564052225091,
            -45.02739830058999,
            -46.77590550272726,
            -49.42098166793585,
            -52.13245458435267,
            -53.6858024133835,
            -55.45435851672664,
            -57.90295836050063,
            -60.05778413964435,
            -61.30511610535905,
            -62.53518222365528,
            -64.9932335363701,
            -66.56054756604135,
            -68.84954200359061,
            -69.85045183682814,
            -71.35044143069535,
            -71.72887853812426,
            -41.2268127547577,
            -30.89345773332752,
            -27.68201738945208,
            -53.95098560256884,
            -56.29754377878271,
            -51.64106914889999,
            -47.60098090628162,
            -44.97124245972373,
            -38.15886520897038,
            -35.7912686013151,
            -27.89776772260666,
            -29.49331246782094,
            -31.36709710815921,
            -32.79259544797242,
            -36.52867235359736,
            -38.32859511021525,
            -40.7891275244765,
            -43.02709567127749,
            -48.4750016767066,
            -75.72861795779318,
            -78.31045513739809,
            -80.65388101385906,
            -82.75007712654769,
            -82.2032307041809
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2250
          ],
          "y": [
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875
          ],
          "value": [
            -85.50316852051765,
            -85.79005225328729,
            -84.87499144393951,
            -83.49541894858703,
            -82.24109478760511,
            -82.43721094913781,
            -79.0435733506456,
            -78.72125570429489,
            -78.5551019362174,
            -76.35089423274621,
            -75.01611253246665,
            -73.48144572461024,
            -71.16699271136895,
            -69.64453496038914,
            -45.55055420496501,
            -42.91481673135422,
            -40.26892565889284,
            -38.65959661197849,
            -37.03408219735138,
            -47.06066829385236,
            -67.59272218914703,
            -73.3001361368224,
            -78.08247755747288,
            -76.87191828154027,
            -73.57132562901825,
            -72.68992339959368,
            -71.55031926231459,
            -68.8893924234435,
            -67.85608275095001,
            -65.42824121424928,
            -63.48473107209429,
            -62.21821968210861,
            -59.68460027361289,
            -57.71074938820675,
            -55.29262489289977,
            -53.05804734234698,
            -52.92579953675158,
            -51.87200804357417,
            -51.38236883794889,
            -48.64288712269627,
            -47.37891140393913,
            -45.49257209873758,
            -41.44076228840277,
            -38.04373045568354,
            -36.00494528654963,
            -33.70231934241019,
            -33.12503031338565,
            -32.2254745697137,
            -32.27495835744776,
            -31.79443956469186,
            -30.18103234353475,
            -27.99769026751164,
            -26.29978735058103,
            -23.66449552937411,
            -21.52817978640087,
            -21.29781933035702,
            -20.04009911615867,
            -19.33614476001821,
            -18.863571312977,
            -18.93181797640864,
            -17.53465039655566,
            -15.4467998072505,
            -14.10210188623751,
            -12.55715687875636,
            -10.14579811453586,
            -8.794916539045516,
            -7.361927146121161,
            -6.692403985653073,
            -5.846412022947334,
            -4.662293576984666,
            -3.578403266146779,
            -2.420210194031824,
            -1.346523163192614,
            -0.2733511621499929,
            0.3341291403557989,
            0.1708633305952389,
            0.808807953944779,
            1.791490831237752,
            2.833017560988083,
            3.962328719353536,
            5.558074917644262,
            8.087933565548155,
            9.912596397043671,
            11.49456420534989,
            11.38615425588796,
            12.6609029393876,
            12.91161970584653,
            14.42499979020795,
            15.48123691463843,
            16.89900454948656,
            18.60837983258534,
            18.95140667329542,
            19.4977801584173,
            20.66298293357249,
            21.48276871594135,
            22.68255593662616,
            23.2933434745064,
            24.60386531311087,
            24.95113403711002,
            25.76855695224367,
            27.07969542825595,
            28.09552279359195,
            28.01749542413745,
            27.41353819146752,
            28.71891047107056,
            30.62770338146947,
            31.37436578981578,
            32.79167867731303,
            33.92792859813198,
            34.52149030636065,
            34.842702007154,
            35.53996430127881,
            36.09574559959583,
            36.38034468167461,
            37.01924288179725,
            37.2037902707234,
            37.19747110153548,
            37.97846511588432,
            38.71232183882967,
            38.9356973755639,
            38.0404235329479,
            37.24875205080025,
            38.11120041063987,
            39.46742799598724,
            40.42655200464651,
            41.08985740458593,
            41.59492891631089,
            41.68699160800315,
            41.9606949435547,
            43.17420462029986,
            42.88963828003034,
            42.94916288927197,
            43.05648690205999,
            42.23626092425548,
            42.41929855197668,
            42.54590021446347,
            42.87838601158001,
            43.9633076894097,
            43.60636376077309,
            44.16030424181372,
            44.02788545121439,
            43.91507536638528,
            44.97769623412751,
            46.32158743334003,
            46.83814404415898,
            47.21074583358131,
            48.19812602363527,
            48.88562034466304,
            48.21341281058267,
            46.85038220486604,
            47.58432260132395,
            46.75952732213773,
            46.22063352144323,
            46.23652785085142,
            45.92640834744088,
            46.11356416717172,
            46.47292735171504,
            46.93302980740555,
            47.02756632468663,
            47.04147067968734,
            46.75787567975931,
            46.64858352043666,
            46.17693775799125,
            46.26215377356857,
            46.76543176174164,
            46.58932812162675,
            46.41023042495362,
            46.11893382389098,
            46.14626232068986,
            46.04630521498621,
            46.87999171437696,
            47.45857586385682,
            47.7204448543489,
            47.3115396744106,
            46.87895489041694,
            46.68013571063057,
            45.77350773615763,
            44.88800186663866,
            43.99459066917188,
            43.21758751757443,
            43.05244874558412,
            42.13019929011352,
            41.11035013920628,
            41.34724440518767,
            40.13484794995748,
            39.9542368541006,
            39.91721314378083,
            39.85949297202751,
            38.74381218338385,
            38.05142114288174,
            36.97722058859654,
            36.12138971220702,
            35.78104951884598,
            35.27976514305919,
            35.52229100023396,
            34.4966356351506,
            33.4654250764288,
            33.07968290755525,
            32.75297785876319,
            33.07715815026313,
            32.43797254981473,
            30.2349217236042,
            29.33850373665337,
            28.07097007462289,
            27.08853753574658,
            25.85775655461475,
            24.87380152160767,
            24.3093181779841,
            23.39356251468416,
            22.75268525409047,
            21.98466245317832,
            20.21033833443653,
            19.98778316192329,
            19.38328750838991,
            18.59177973528858,
            18.07221087801736,
            16.75080784480087,
            16.09579885553103,
            14.8076678669895,
            13.53246625512838,
            11.40773474617163,
            10.37369656842202,
            9.73658370639896,
            8.713429451745469,
            7.856657248339616,
            7.124782314349432,
            6.842157745268196,
            6.852668320789235,
            5.498503014678136,
            4.032892775285291,
            2.029519237112254,
            0.1180568887093614,
            -0.4650333664812933,
            -3.115202389381011,
            -3.910338364221388,
            -5.367915946408175,
            -6.523846877826145,
            -8.104076187009923,
            -9.455583494855091,
            -10.690045201045,
            -12.18621946463827,
            -13.41618644801201,
            -14.4913037729566,
            -16.42766255827155,
            -17.51040144881699,
            -18.78514194686431,
            -19.77820465981495,
            -21.03069346048869,
            -22.41285983473063,
            -24.01789970463142,
            -25.11874299671035,
            -26.57357799762394,
            -27.65441604424268,
            -28.41234527295455,
            -30.18557981704362,
            -31.1892872559838,
            -31.35840233881027,
            -32.49687506468035,
            -34.46980190346949,
            -36.68702265713364,
            -37.30267417267896,
            -37.28908632183447,
            -38.49588028970174,
            -40.18468098365702,
            -43.47597860032693,
            -45.23405732470565,
            -46.38049722416326,
            -48.05866774404421,
            -50.80027403892018,
            -52.46004366199486,
            -54.18052387540229,
            -55.35418677027337,
            -56.19633520836942,
            -56.97756205336191,
            -57.93555101263337,
            -60.28821735526435,
            -73.19325231947005,
            -76.99670095462352,
            -72.98205309780315,
            -69.93906572461128,
            -66.54963362962008,
            -66.56853656750172,
            -68.34011583123356,
            -69.18630970176309,
            -74.12391278194264,
            -73.97251465590671,
            -79.42346564959735
          ]
        },
        {
          "x": [
            62.5,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2296.875,
            2304.6875,
            2312.5
          ],
          "y": [
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25
          ],
          "value": [
            -81.62864105543122,
            -84.84451245749369,
            -82.52570114564151,
            -67.74517532903701,
            -66.46806286880746,
            -62.22030788194388,
            -69.62497718632221,
            -76.49687177035958,
            -80.8796685305424,
            -83.42062210431322,
            -81.82418969227001,
            -76.59841503482312,
            -75.31237497460097,
            -74.05372889479622,
            -71.9366071280092,
            -70.12305286480114,
            -68.68795026093721,
            -66.82499952148646,
            -65.26480865431949,
            -64.05028398148715,
            -62.55754851736128,
            -60.81809624447487,
            -59.10249092266895,
            -57.22525747842155,
            -55.5143051315099,
            -53.92334060161375,
            -52.58414603304118,
            -50.71536725154147,
            -48.42707858188078,
            -46.35834920918569,
            -43.74428681330755,
            -42.39132613292895,
            -42.15915032546036,
            -41.11741873202845,
            -39.54054773203097,
            -38.3687911380548,
            -36.83175964397378,
            -34.4106592820026,
            -33.34878783789463,
            -32.21867518732324,
            -25.83689456514549,
            -27.23944453464355,
            -25.37215368647594,
            -24.48650411679409,
            -22.51071236969437,
            -21.0301823244663,
            -19.86538518394809,
            -18.8460799108725,
            -18.1531322596129,
            -16.88671909505501,
            -15.38898868602701,
            -13.64920262858504,
            -12.15858992509311,
            -11.33055684476858,
            -9.852706170931924,
            -8.584109309595078,
            -7.410511443595169,
            -6.580183708138065,
            -5.209022674534936,
            -3.96520363210584,
            -2.622442707433947,
            -1.656647214076656,
            -0.006970811483597572,
            1.017694103211397,
            1.665259105720907,
            2.526713842598838,
            3.720758968484006,
            4.884359441348352,
            6.482833214249695,
            8.64657704369165,
            9.314626367995515,
            9.956512258213479,
            10.45327371684834,
            12.23723393195542,
            13.01285192312207,
            14.0750107675558,
            14.84781387262046,
            15.96119182067923,
            16.99117638054304,
            18.2354160642717,
            18.94431261462159,
            20.37300509982742,
            21.9598259718623,
            22.82543573528528,
            24.01875099167228,
            24.98252251825761,
            25.20812086004298,
            26.26602326927241,
            26.68419256224297,
            28.45471499313135,
            29.38547004305292,
            30.48664802918211,
            30.91140388278291,
            31.32369602099061,
            32.50584632041864,
            33.44473952893168,
            33.47743404447101,
            33.85139279998839,
            34.91716415737756,
            35.40824764058925,
            35.3604591509793,
            35.70266926544718,
            35.67280509741977,
            36.22861913754605,
            36.84324474306777,
            37.59199898922816,
            37.93419091380201,
            38.58790296362713,
            39.03358083334751,
            39.91607445641421,
            41.26577186980285,
            41.58854790148325,
            42.54201849107631,
            43.05670518078841,
            43.56748831924051,
            43.92283517518081,
            44.23266727826558,
            44.57976319827139,
            45.09554491960444,
            45.51905658445321,
            44.82442818698473,
            44.93838787311688,
            45.51353777060285,
            46.7324243800249,
            45.70716919261031,
            45.6080560979899,
            45.85286296787672,
            45.87426519719884,
            46.14542922354303,
            46.29316754289903,
            46.45574517780915,
            46.31056435755454,
            46.59698606701568,
            46.66441236622632,
            47.12191730504856,
            47.60483716381714,
            47.78701986651868,
            48.05032222066075,
            48.33558705286123,
            48.67316602030769,
            48.29200042877346,
            48.58018291997723,
            48.52839992963709,
            48.57021849602461,
            48.27614611713216,
            48.285710363416,
            48.38335007661954,
            48.40501424041577,
            48.48979733651504,
            48.43525312026031,
            48.55108272749931,
            48.95703023066744,
            49.25314351567067,
            47.7615867566783,
            47.92576146428473,
            48.6920980620198,
            47.77956928592175,
            46.73005969380029,
            46.79328412748873,
            46.94869858212769,
            46.74255615100265,
            47.06846448243596,
            47.44655598187819,
            46.37433812604286,
            45.76295759761706,
            44.6944723080378,
            44.85412137000822,
            44.66835525818169,
            44.03564889798872,
            43.8912829849869,
            44.02972263051197,
            44.12933776620775,
            43.59017839306034,
            43.01652734284289,
            42.14647560729645,
            41.85143916402012,
            41.3332054449711,
            40.89436333742924,
            40.13242505607195,
            39.10485247615725,
            38.13828880083747,
            37.1793721569702,
            36.62848757812753,
            35.88209801819175,
            35.07091605570167,
            34.57136335782707,
            34.46363189141266,
            33.77101893420331,
            33.20972246001475,
            32.48882785555907,
            31.75148231093772,
            30.61098686885089,
            30.07188752235379,
            29.45601227111183,
            29.0254447463667,
            27.77095505734906,
            27.81158946163487,
            27.871368729393,
            27.31623681029305,
            25.92988676042296,
            24.45612517476548,
            23.46743167436216,
            24.39835589029826,
            23.56776531087235,
            22.46005351480562,
            19.1575145436218,
            17.55474659148604,
            16.47468889132142,
            14.34379282727605,
            14.03632359142648,
            13.14761084358906,
            12.6735221783747,
            12.41650352312718,
            12.32311296917032,
            10.90471869247267,
            8.977797733678017,
            8.567758413846605,
            7.120197096810443,
            5.871047505934257,
            4.345793058746494,
            3.236078782720142,
            1.954374738488696,
            0.4714921146842244,
            -0.6032428814251034,
            -1.776299541234039,
            -2.788023266475648,
            -4.100482783542247,
            -6.124292212916771,
            -8.259072274086066,
            -9.02387091628043,
            -10.58326779457275,
            -11.49673153122421,
            -12.67120023840107,
            -13.31467501586303,
            -15.42532118037343,
            -16.1550833581714,
            -17.14954123599455,
            -18.50474836828653,
            -20.50660441454966,
            -21.99607115471736,
            -23.19842496945057,
            -24.57625123497564,
            -26.10677256598137,
            -27.73062988126185,
            -29.6503167191986,
            -30.48257349291816,
            -31.2306874548085,
            -33.62141796969809,
            -35.72020432329737,
            -37.51218537217937,
            -38.41494253720157,
            -39.40592068829574,
            -41.87651938991621,
            -43.1919215770904,
            -45.73160913423635,
            -47.51877713715658,
            -48.93442746833898,
            -50.85661541670561,
            -52.54155257716775,
            -54.14295446826145,
            -55.77988486038521,
            -57.3451179661788,
            -59.2088108533062,
            -60.27031486155465,
            -68.08120815549046,
            -66.55188917648047,
            -59.51463754172437,
            -34.20404391363263,
            -31.29105971311219,
            -27.80284921755083,
            -27.17312418099027,
            -29.86527033499442,
            -33.75005326233804,
            -62.50922888284549,
            -63.21662658592686,
            -65.36989531014115,
            -68.23978765169159,
            -70.83435775712132,
            -72.67856562975794,
            -75.44415711890906,
            -76.58237154828385,
            -78.18420272087678,
            -79.79409565450624,
            -81.54899114742875
          ]
        },
        {
          "x": [
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2296.875,
            2328.125,
            2343.75,
            2351.5625
          ],
          "y": [
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25
          ],
          "value": [
            -87.70112617639825,
            -88.49981531966478,
            -86.79848542669788,
            -84.46759602520615,
            -83.29237607540563,
            -79.67928104335442,
            -79.48360871523619,
            -77.88408402120695,
            -75.22991654695943,
            -73.60635936493054,
            -71.61387475207448,
            -72.18286918941885,
            -74.69247793778777,
            -75.44503023382276,
            -75.88586595375091,
            -53.37591574061662,
            -50.46723890700378,
            -50.64447395852767,
            -50.91626735520549,
            -63.14779602689669,
            -83.27222894877195,
            -81.68361819116399,
            -81.42660226440057,
            -79.75817425176501,
            -78.0602713348344,
            -76.37919770786539,
            -73.36130511248484,
            -72.35709199449047,
            -69.57873847568408,
            -67.73311906727031,
            -65.97946776309982,
            -63.94441879820079,
            -62.41615483304486,
            -60.83446714910679,
            -60.32350938767195,
            -57.91765215690248,
            -56.2534733035136,
            -54.78582897922024,
            -53.10327469487675,
            -52.02072497922927,
            -50.33770139561966,
            -48.58606916968711,
            -46.96971154771745,
            -45.25616168393753,
            -41.46409628447145,
            -40.19572588731535,
            -38.89889921993017,
            -36.61461596493609,
            -35.16079596010968,
            -32.7641173498705,
            -31.32863639621064,
            -29.62159487651661,
            -27.86956429190468,
            -26.61036342033185,
            -24.57747541484423,
            -22.54886749142315,
            -21.19866076100152,
            -20.51872979791369,
            -18.59821168181952,
            -17.22440356388688,
            -14.76433317293413,
            -13.49223566649016,
            -11.97658184537431,
            -10.26003701554146,
            -9.611561836209148,
            -8.746640560275409,
            -7.814618584234267,
            -5.988640623399988,
            -4.643097781809047,
            -2.895838633776293,
            -1.608537331776461,
            -0.6056533834453148,
            -0.06829847620792862,
            2.088093879137887,
            4.283645466784947,
            4.566950792650459,
            4.883063866145676,
            5.502640306076501,
            6.92130379320588,
            8.837456334731542,
            10.47072692017537,
            12.54940343642375,
            14.01881127094384,
            14.32035696780076,
            14.39576408301946,
            15.24633717053803,
            16.56204585742671,
            17.96793003450148,
            19.28610436152667,
            20.18804116232786,
            20.13467019423842,
            21.00082383549307,
            22.02519317506813,
            23.06806709384546,
            23.39721868338529,
            24.35757778584957,
            26.23592627060134,
            28.39621811290272,
            27.61551695584785,
            27.70799255813472,
            28.51978570106439,
            28.96288060583174,
            29.30775917775463,
            31.059498724062,
            33.09796375106089,
            32.81598765170202,
            32.6452536683064,
            32.01549770892598,
            31.67322211083956,
            31.60822234349325,
            32.38807403249666,
            33.44157812534831,
            33.56028173584491,
            34.35656617511995,
            35.5030715581961,
            36.56300032162108,
            36.82624446810223,
            37.72245327127166,
            38.52356530842371,
            38.69733336614445,
            39.01131276506931,
            39.68990495195612,
            40.37094913655892,
            41.08737266506068,
            40.92151721124537,
            41.27041029278189,
            43.20793595979922,
            45.45391857391223,
            47.66430720337667,
            49.62320963386446,
            50.78755566501059,
            50.70236875326373,
            50.69797043688595,
            47.77793947141618,
            47.79105074703693,
            47.23943493445404,
            47.42589590023272,
            47.85466444445774,
            47.12806548923254,
            45.70079545374028,
            44.9828221462667,
            46.24953362508677,
            47.00509816757403,
            47.93364132638089,
            47.29686042992398,
            46.52381539926864,
            46.01517139235511,
            45.12140367296524,
            45.20183938439004,
            45.37680433713831,
            45.57381907943636,
            45.15196633292362,
            46.07384107657708,
            46.5590346721001,
            46.26679219654761,
            45.8853246527724,
            45.9426773886662,
            46.22843698598444,
            46.43489592126571,
            46.25890142051503,
            46.12465636455454,
            46.07798473443836,
            46.26851659850217,
            45.62712638289668,
            45.16169428825378,
            45.18796413321979,
            44.99748320085928,
            44.71128340810537,
            44.12540511111729,
            43.64642518339679,
            43.05915717850439,
            42.35688538756222,
            41.93539280095138,
            41.88268212601542,
            42.3901692556683,
            41.61852484685369,
            41.79021198069677,
            41.61706965533085,
            41.86199294053949,
            41.62896584603004,
            40.70085196872242,
            40.34991798107512,
            40.24466397822835,
            40.24936788482592,
            40.0804819946643,
            39.06719211954623,
            38.80153963109478,
            38.2997386623174,
            38.07436587521806,
            37.8903241653461,
            37.28762021637522,
            37.20878521562554,
            37.08587610162795,
            36.44576645456254,
            35.18333323881961,
            34.01759022381157,
            33.31735933898017,
            31.68973853462376,
            30.48421422136016,
            30.49195220228285,
            28.65023270715028,
            27.57882975856774,
            26.5224643953843,
            24.94874752301257,
            23.66091212024912,
            22.36769614682999,
            21.81520358135458,
            21.51699118257966,
            20.81024831568357,
            20.08353840210475,
            19.19012174766976,
            18.18953751353547,
            17.13430356176104,
            15.95600588188972,
            14.9498164319084,
            13.76596355839865,
            12.60320277651772,
            11.70535506389569,
            10.82467861124314,
            10.11453241517302,
            8.864351912052371,
            8.048483323364053,
            7.334849215112627,
            6.248239969863789,
            5.566078471019864,
            4.363729203760158,
            3.444837147981161,
            2.571662207628833,
            1.383937728860474,
            0.3734154461199068,
            -0.6015530402692093,
            -1.543726966701797,
            -2.53926805271476,
            -3.333594804644235,
            -3.68082987733942,
            -4.494276709010592,
            -4.566394636640325,
            -5.54813186681713,
            -5.936624802416191,
            -7.336792805290315,
            -8.729654837225098,
            -10.25579786073649,
            -11.87241196021205,
            -13.13590564677725,
            -14.77592650189763,
            -15.38409196655266,
            -16.77526779531036,
            -17.72520590748172,
            -19.52214006450959,
            -21.09224442392588,
            -22.53449565614574,
            -24.14037771814037,
            -26.20571467559785,
            -28.36557359842118,
            -29.86982872243971,
            -30.62765244976617,
            -31.60870255669579,
            -33.27995364088565,
            -35.08844019961543,
            -36.97947249747813,
            -38.82342207361944,
            -39.51973121729679,
            -41.30439265281893,
            -43.63319021649659,
            -44.49936386663467,
            -46.13534838426858,
            -46.72282739193179,
            -49.88012005924247,
            -51.61692752153613,
            -54.52172990771942,
            -56.17687565973029,
            -57.96831101179123,
            -59.84157178318128,
            -61.35697913123295,
            -63.08159208856523,
            -70.3859404893592,
            -71.32181781344116,
            -67.5876290188171,
            -48.21802212973125,
            -40.98469435120933,
            -38.70009459205903,
            -35.94646841520444,
            -35.79807162168436,
            -35.66612940630876,
            -35.95288217184134,
            -36.29346974776126,
            -35.80367410904728,
            -36.51890438050032,
            -36.93477265187539,
            -37.82218846026808,
            -32.98964657005854,
            -42.01483170618303,
            -65.35046850331128,
            -77.60763401165605,
            -80.15874482225627
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2179.6875,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125
          ],
          "y": [
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875,
            179.6875
          ],
          "value": [
            -61.07111403252929,
            -58.00941289635375,
            -52.89888940751553,
            -48.73974103247747,
            -47.42247620015405,
            -42.84850729163736,
            -37.12681063916534,
            -37.36524013220333,
            -41.52702967985533,
            -45.72832403937355,
            -49.16001489618793,
            -55.43607039726339,
            -55.68202323047444,
            -30.41228956135456,
            -23.4928465943085,
            -25.52727528382093,
            -25.87255949038081,
            -25.86754271760583,
            -27.20916199905332,
            -32.81942190369591,
            -48.66268136538565,
            -60.67357026040554,
            -67.15852941852063,
            -67.74823123123497,
            -68.0660959915258,
            -67.18583608744666,
            -64.54774847952649,
            -63.12832556432113,
            -61.27088272478431,
            -59.6034515183419,
            -57.61015927419066,
            -55.09774200618267,
            -53.73924068408087,
            -52.64487117528915,
            -50.93152140034363,
            -49.67790664522909,
            -47.52257518703118,
            -46.46608795155771,
            -44.74446177482605,
            -42.67320400686003,
            -40.64357563038357,
            -39.12736428901553,
            -37.43936395039782,
            -36.84923649416305,
            -35.98899274948053,
            -34.69402872724459,
            -32.3708554788027,
            -29.35353222710546,
            -26.63575469341595,
            -23.68285095144529,
            -23.15028905286454,
            -23.24143315490801,
            -23.24741581105627,
            -23.19835402886383,
            -22.13327570643742,
            -20.62289968307596,
            -18.94562228699215,
            -17.69939990481362,
            -15.65116326673888,
            -14.38628532923758,
            -12.43567385245115,
            -12.6094510051189,
            -12.06542947329581,
            -10.64723073795903,
            -9.066597158380318,
            -7.896434908616357,
            -4.97155679113348,
            -3.771758429138572,
            -0.3170985678480065,
            -1.444879330847471,
            -1.462705085941707,
            2.275646465932368,
            2.402442987659015,
            2.74338935923879,
            4.15241902373964,
            0.2658450739545515,
            1.044488271872979,
            2.911222509283107,
            3.120002247669618,
            3.919794380635722,
            4.658291800296865,
            5.87948761676671,
            7.384825039480347,
            8.614519174443558,
            9.33736464503454,
            11.02657734008972,
            10.86144038708881,
            11.79929040517891,
            12.92873912461801,
            13.23536616837373,
            14.01117970090127,
            15.44744191050995,
            17.21057014947291,
            16.00585346750449,
            16.26209996175021,
            16.43458926992025,
            18.03577833925374,
            18.72414759418461,
            19.5630345842801,
            19.85757990041748,
            20.54647120530717,
            22.22850343969185,
            22.1312657231465,
            22.41708352812566,
            23.84554500167724,
            26.13579272292554,
            27.76027395157143,
            28.58981861209031,
            28.77647239074577,
            28.58238985936623,
            28.24017974489834,
            28.66303657356184,
            28.07990313158371,
            27.23016405070666,
            27.82367300824262,
            28.08446879498661,
            28.58265179384034,
            29.00077561207581,
            30.25324440386612,
            31.78583938279189,
            31.37681051157415,
            31.04740608250722,
            31.92891381331719,
            31.46265225950629,
            31.06949225184508,
            30.74257256230339,
            30.84760464844294,
            30.86715878453106,
            31.05479845544323,
            31.71707794535905,
            31.76400059601292,
            31.99208003934473,
            31.80536805302836,
            31.66958049405366,
            31.96141551597975,
            31.97820478817448,
            32.5544060615357,
            32.53712930018082,
            32.47602944611572,
            32.54715556977317,
            33.98989065317437,
            34.62187305558473,
            34.45609399932437,
            33.46674202475697,
            32.76368443039246,
            32.45174593757838,
            32.09000715287402,
            32.36805787310004,
            32.34656469430774,
            32.0840954373125,
            32.33683673897758,
            32.03521919203922,
            32.53411341574974,
            34.12765363464132,
            34.70390947768465,
            34.17965126573108,
            33.30179970362224,
            32.24927058909088,
            31.68730472680181,
            31.90790448570624,
            32.53601607866585,
            32.44625622755848,
            30.156945285853,
            29.00605795730371,
            28.54329432011582,
            28.35524537658785,
            28.08427234413102,
            28.92558950406965,
            28.11255762935616,
            27.05901897570584,
            25.7978135778103,
            26.15406083350535,
            26.53186311363243,
            26.83360980881844,
            24.79163049429189,
            23.63372004765552,
            22.86073504365049,
            22.70419827254955,
            22.71882112836465,
            22.39765126432758,
            21.93969157815445,
            22.55134859296959,
            24.30934910080396,
            23.75253461650573,
            23.41858271392994,
            18.45191582106054,
            16.94704224064481,
            16.24248034204356,
            15.70789208926726,
            14.65116474719252,
            13.9205531013431,
            13.17319856752874,
            12.16654254676541,
            11.53294942923822,
            11.08519518311368,
            9.923690413415898,
            9.061097443918698,
            8.424749466939829,
            7.685224773013033,
            6.79746835885453,
            6.16751140114502,
            5.345995759853395,
            4.706101208284963,
            3.671310651043314,
            2.955920763270115,
            3.103796643699752,
            3.010586169693852,
            2.156601567548933,
            0.3347580843637843,
            -1.58157797613967,
            -2.743982349784346,
            -3.999435648438521,
            -4.867203188041458,
            -6.238199603103567,
            -6.99007568982779,
            -7.524179181928048,
            -8.213965884351637,
            -8.642305147077423,
            -9.837349352892488,
            -10.80750007531606,
            -12.05577063956298,
            -13.31678231508704,
            -14.1151313073351,
            -15.7745998876635,
            -17.34606121317483,
            -18.51344131864607,
            -19.15018401632551,
            -20.96348362101708,
            -22.26875767519232,
            -24.19270640530158,
            -25.65813883848023,
            -26.13933065731544,
            -27.70943865471054,
            -28.88653034460731,
            -28.80102147173602,
            -30.36626185348723,
            -32.24038664484397,
            -34.10439967410639,
            -35.63601057976484,
            -36.66904012789018,
            -38.56499824905768,
            -40.47828406328335,
            -42.47325705364347,
            -43.81628968985751,
            -45.38991197478026,
            -46.92512811743654,
            -48.52241545449942,
            -50.37760274717584,
            -51.25005918671377,
            -53.09241532813758,
            -54.53196718008257,
            -56.46061254083179,
            -58.26597043778747,
            -59.43846917944029,
            -60.08109994581901,
            -62.97138315858319,
            -64.29446511901915,
            -66.18320185225457,
            -28.48200347216334,
            -28.38639738911297,
            -27.1316912403563,
            -27.19734220590908,
            -26.89299799385481,
            -25.71127697592601,
            -26.19285987748299,
            -25.31874815758783,
            -25.75834150775336,
            -25.68073796282988,
            -25.75048165454064,
            -26.64139719854575,
            -28.23033173626754,
            -27.62405347311869,
            -28.60543463611975,
            -30.51835301448591,
            -33.66987584740855,
            -36.2898463208694,
            -40.96519478480332,
            -57.30149860028177,
            -78.93033034633845,
            -72.83088780241087,
            -66.29733252339065,
            -64.06682223314419,
            -59.09576066187583,
            -56.78800152963959
          ]
        },
        {
          "x": [
            0,
            7.8125,
            15.625,
            23.4375,
            31.25,
            39.0625,
            46.875,
            54.6875,
            62.5,
            70.3125,
            78.125,
            85.9375,
            93.75,
            101.5625,
            109.375,
            117.1875,
            125,
            132.8125,
            140.625,
            148.4375,
            156.25,
            164.0625,
            171.875,
            179.6875,
            187.5,
            195.3125,
            203.125,
            210.9375,
            218.75,
            226.5625,
            234.375,
            242.1875,
            250,
            257.8125,
            265.625,
            273.4375,
            281.25,
            289.0625,
            296.875,
            304.6875,
            312.5,
            320.3125,
            328.125,
            335.9375,
            343.75,
            351.5625,
            359.375,
            367.1875,
            375,
            382.8125,
            390.625,
            398.4375,
            406.25,
            414.0625,
            421.875,
            429.6875,
            437.5,
            445.3125,
            453.125,
            460.9375,
            468.75,
            476.5625,
            484.375,
            492.1875,
            500,
            507.8125,
            515.625,
            523.4375,
            531.25,
            539.0625,
            546.875,
            554.6875,
            562.5,
            570.3125,
            578.125,
            585.9375,
            593.75,
            601.5625,
            609.375,
            617.1875,
            625,
            632.8125,
            640.625,
            648.4375,
            656.25,
            664.0625,
            671.875,
            679.6875,
            687.5,
            695.3125,
            703.125,
            710.9375,
            718.75,
            726.5625,
            734.375,
            742.1875,
            750,
            757.8125,
            765.625,
            773.4375,
            781.25,
            789.0625,
            796.875,
            804.6875,
            812.5,
            820.3125,
            828.125,
            835.9375,
            843.75,
            851.5625,
            859.375,
            867.1875,
            875,
            882.8125,
            890.625,
            898.4375,
            906.25,
            914.0625,
            921.875,
            929.6875,
            937.5,
            945.3125,
            953.125,
            960.9375,
            968.75,
            976.5625,
            984.375,
            992.1875,
            1000,
            1007.8125,
            1015.625,
            1023.4375,
            1031.25,
            1039.0625,
            1046.875,
            1054.6875,
            1062.5,
            1070.3125,
            1078.125,
            1085.9375,
            1093.75,
            1101.5625,
            1109.375,
            1117.1875,
            1125,
            1132.8125,
            1140.625,
            1148.4375,
            1156.25,
            1164.0625,
            1171.875,
            1179.6875,
            1187.5,
            1195.3125,
            1203.125,
            1210.9375,
            1218.75,
            1226.5625,
            1234.375,
            1242.1875,
            1250,
            1257.8125,
            1265.625,
            1273.4375,
            1281.25,
            1289.0625,
            1296.875,
            1304.6875,
            1312.5,
            1320.3125,
            1328.125,
            1335.9375,
            1343.75,
            1351.5625,
            1359.375,
            1367.1875,
            1375,
            1382.8125,
            1390.625,
            1398.4375,
            1406.25,
            1414.0625,
            1421.875,
            1429.6875,
            1437.5,
            1445.3125,
            1453.125,
            1460.9375,
            1468.75,
            1476.5625,
            1484.375,
            1492.1875,
            1500,
            1507.8125,
            1515.625,
            1523.4375,
            1531.25,
            1539.0625,
            1546.875,
            1554.6875,
            1562.5,
            1570.3125,
            1578.125,
            1585.9375,
            1593.75,
            1601.5625,
            1609.375,
            1617.1875,
            1625,
            1632.8125,
            1640.625,
            1648.4375,
            1656.25,
            1664.0625,
            1671.875,
            1679.6875,
            1687.5,
            1695.3125,
            1703.125,
            1710.9375,
            1718.75,
            1726.5625,
            1734.375,
            1742.1875,
            1750,
            1757.8125,
            1765.625,
            1773.4375,
            1781.25,
            1789.0625,
            1796.875,
            1804.6875,
            1812.5,
            1820.3125,
            1828.125,
            1835.9375,
            1843.75,
            1851.5625,
            1859.375,
            1867.1875,
            1875,
            1882.8125,
            1890.625,
            1898.4375,
            1906.25,
            1914.0625,
            1921.875,
            1929.6875,
            1937.5,
            1945.3125,
            1953.125,
            1960.9375,
            1968.75,
            1976.5625,
            1984.375,
            1992.1875,
            2000,
            2007.8125,
            2015.625,
            2023.4375,
            2031.25,
            2039.0625,
            2046.875,
            2054.6875,
            2062.5,
            2070.3125,
            2078.125,
            2085.9375,
            2093.75,
            2101.5625,
            2109.375,
            2117.1875,
            2125,
            2132.8125,
            2140.625,
            2148.4375,
            2156.25,
            2164.0625,
            2171.875,
            2179.6875,
            2187.5,
            2195.3125,
            2203.125,
            2210.9375,
            2218.75,
            2226.5625,
            2234.375,
            2242.1875,
            2250,
            2257.8125,
            2265.625,
            2273.4375,
            2281.25,
            2289.0625,
            2304.6875,
            2312.5,
            2320.3125,
            2328.125,
            2335.9375
          ],
          "y": [
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25,
            156.25
          ],
          "value": [
            -97.07352728582919,
            -91.88485273625702,
            -92.62200183002278,
            -93.56864029541612,
            -92.68149005947635,
            -90.10042413137853,
            -88.28091085888445,
            -86.46614151075482,
            -85.32311039743945,
            -86.02619345765561,
            -86.45097841508687,
            -89.23892892198637,
            -88.34604523144662,
            -85.57468390790746,
            -84.3359885038808,
            -81.23098814394325,
            -79.0088452049531,
            -77.82343163853511,
            -63.90606722561643,
            -58.51811147294939,
            -55.87157284026034,
            -53.13544534146786,
            -53.37366019375622,
            -60.2574109507259,
            -74.95728641515598,
            -79.44789831526577,
            -84.49423330603167,
            -83.86754780076444,
            -82.88054959848523,
            -81.426311226096,
            -79.21209908090532,
            -77.47441850369796,
            -74.98254126403481,
            -73.43286415562034,
            -71.90650649135932,
            -70.14667062321678,
            -67.6186173222959,
            -65.51541446242481,
            -63.87521716533229,
            -63.20101238088682,
            -61.41327321529388,
            -57.74122837465256,
            -55.47370165004395,
            -54.26920688478276,
            -54.95472942129709,
            -52.78251046547666,
            -51.91907257540151,
            -49.84053521184251,
            -46.00473403115757,
            -46.13327109836973,
            -44.5312907686457,
            -43.68724330561236,
            -42.40298949298449,
            -41.09769724891521,
            -38.66983388434164,
            -38.46158142550848,
            -36.85436240630224,
            -35.53287024260499,
            -34.240962122567,
            -32.75089329690672,
            -31.50560587528162,
            -29.82563637488056,
            -27.9735049844021,
            -26.28323818498757,
            -25.45968345657457,
            -23.50137037865352,
            -23.25714012840763,
            -22.358266505762,
            -20.85274718410801,
            -19.27123412315268,
            -17.71649112924933,
            -16.38224603084382,
            -15.2330349010299,
            -14.03524402121548,
            -13.30062241322594,
            -12.2726223708014,
            -11.04768944060197,
            -9.70198743743822,
            -8.513708053214941,
            -7.564096449641511,
            -6.554535048053367,
            -5.231373052083654,
            -3.458231049080496,
            -2.06177151085285,
            0.4694810229466384,
            1.269782956114796,
            2.505077191017335,
            3.793195674006711,
            4.813710802409332,
            6.325011327135144,
            7.249772352224682,
            10.02624958346132,
            13.21902163908817,
            14.71777977712918,
            12.84183144889539,
            12.54359267477412,
            11.96443827211624,
            12.90243744733743,
            14.74136843171436,
            14.57015696360031,
            14.97853099863278,
            15.29928704258054,
            15.73759982420597,
            17.5797613337636,
            19.14693348226137,
            19.62403075594921,
            20.49741669907235,
            21.09273191308603,
            21.1074930120958,
            22.75067890877835,
            24.0791923715733,
            25.06656528566964,
            25.91198244772386,
            25.89157156762667,
            27.38445800787304,
            28.11031117744278,
            28.13645369315054,
            29.23569445556495,
            29.79017517645843,
            28.57290382962674,
            28.84373679989949,
            28.40489287336823,
            29.55878153443336,
            30.48532744287513,
            29.30583468696568,
            30.09830652445089,
            30.49676524824463,
            31.076018785825,
            30.58341826545075,
            31.55877129756846,
            31.96340549038723,
            31.31092307739891,
            31.75509118591435,
            32.14572643628344,
            32.32026938349009,
            32.36369957448915,
            32.29962021578103,
            32.51108137192205,
            33.13419074402191,
            33.52510248078033,
            34.10911085666157,
            34.26128751016222,
            34.59928120719269,
            33.94497980480082,
            34.46893970249221,
            34.71490708761849,
            34.48376810410991,
            34.55575642874464,
            34.80399755062535,
            34.64498513494618,
            34.60045627434738,
            34.20701250433922,
            34.2988787451759,
            34.4145591952838,
            34.70285446383059,
            34.70726733212359,
            35.12733746902086,
            36.08961560530588,
            36.88753349706531,
            38.43205558951013,
            38.61316145048477,
            37.57894955924712,
            36.33972301031463,
            35.82740100682713,
            36.26162651926279,
            36.74258914543316,
            37.05648850882426,
            38.38271732092835,
            38.30280184047297,
            37.9227421944961,
            38.38246993836947,
            36.76143023767509,
            34.47558628977276,
            33.27810190967284,
            32.10851718904451,
            31.64662120980211,
            31.32340498268604,
            30.93725899816491,
            30.88066296186298,
            30.92276529059745,
            30.06521728821099,
            29.51643182314001,
            28.99381615861785,
            28.7015427602455,
            28.69972558983136,
            28.49154225259554,
            28.20625559252221,
            28.29088225553278,
            28.46882853191346,
            26.28743277455214,
            25.47894109738991,
            24.91722261765972,
            24.31526809232309,
            23.96337185928132,
            23.9574601437198,
            24.85373261151835,
            27.63292468443979,
            27.48907900240738,
            25.97486309241503,
            24.96093657100573,
            23.92347050772514,
            22.45225186925381,
            21.46293263649568,
            20.75180600513704,
            18.98124537547119,
            17.77222678356338,
            17.36964622978121,
            16.38599496800452,
            16.80139030213468,
            16.68927507125773,
            16.11123479960952,
            14.00153905706247,
            12.97637754760217,
            12.49698016181355,
            11.721157534339,
            10.75845739251235,
            10.58116595231695,
            9.490313459536992,
            7.825402462913189,
            8.289187462651171,
            9.113317901210394,
            8.465430255455431,
            5.047037120675668,
            3.495231112538022,
            2.641892706378712,
            1.691884676802147,
            1.4180586731527,
            0.145881585922325,
            -0.8983514589999686,
            -1.987190216823365,
            -3.038814838873805,
            -4.650950359064154,
            -5.31093064637389,
            -6.43291150481673,
            -6.02051386522362,
            -9.275996490032412,
            -10.86937754735118,
            -11.37158687924966,
            -13.04187753703445,
            -15.06608168710954,
            -15.92560329299886,
            -16.57989741943311,
            -17.58600228640717,
            -18.44387406890746,
            -20.38475031440612,
            -22.41209949715994,
            -23.27794391021598,
            -24.60197174514178,
            -26.18051985336933,
            -27.58576738415286,
            -29.54383126052562,
            -31.57637183903717,
            -32.5763103319332,
            -34.43495734245516,
            -35.63262725947425,
            -36.74701292766258,
            -38.51308065350167,
            -40.07121606264263,
            -41.82818156550638,
            -42.79705535736866,
            -43.51348979980685,
            -44.93109008762985,
            -44.6961130364798,
            -44.95151006267406,
            -45.2838467026595,
            -47.36435221275315,
            -49.09573544864543,
            -50.32303306506947,
            -52.27110523264855,
            -53.19847696227953,
            -54.56158396555111,
            -59.90651698084548,
            -61.324484704528,
            -64.28567576222122,
            -65.52450940944254,
            -67.23963451804593,
            -68.06961755501106,
            -70.7693470758386,
            -71.91917393356562,
            -89.15626676753163,
            -90.1121020433493,
            -88.96784129319713,
            -85.53273801226169,
            -77.04157178523019,
            -66.61147926934063,
            -54.64139758259989,
            -44.77267066249624,
            -39.42112380173057,
            -38.0772034986876,
            -38.15482705249451,
            -39.4221096939873,
            -41.68570012552664,
            -49.07230686512776,
            -55.53052324103191,
            -85.62081347918138,
            -87.83132943790406,
            -90.57303395820782,
            -92.46376430382952,
            -94.79776053922251
          ]
        }
      ],
      "grooves": [
        {
          "groove": [
            290.0390625,
            1983.3984375
          ]
        },
        {
          "groove": [
            279.296875,
            1955.078125
          ]
        },
        {
          "groove": [
            370.1171875,
            2028.3203125
          ]
        },
        {
          "groove": [
            299.8046875,
            2051.7578125
          ]
        },
        {
          "groove": [
            284.1796875,
            1942.3828125
          ]
        },
        {
          "groove": [
            291.015625,
            2037.109375
          ]
        },
        {
          "groove": [
            283.203125,
            1982.421875
          ]
        },
        {
          "groove": [
            279.296875,
            1955.078125
          ]
        },
        {
          "groove": [
            370.1171875,
            2028.3203125
          ]
        },
        {
          "groove": [
            302.734375,
            2025.390625
          ]
        },
        {
          "groove": [
            284.1796875,
            1942.3828125
          ]
        },
        {
          "groove": [
            291.015625,
            2037.109375
          ]
        }
      ]
    },
    "preCC_export": null,
    "show_alert_export": false,
    "stage_export": [
      "upload",
      "crosscut",
      "groove"
    ]
  }
}
